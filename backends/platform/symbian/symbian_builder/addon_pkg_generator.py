# ScummVM - Graphic Adventure Engine
# Copyright (C) 2020-2021 Stryzhniou Fiodar

# ScummVM is the legal property of its developers, whose names
# are too numerous to list here. Please refer to the COPYRIGHT
# file distributed with this source distribution.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from __future__ import with_statement
import os
from common_names import *

# Template args = (Package Name = filename + platform, Component name, UID, major version, minor version, build number).
pkg_template = """
;
;   Warning: autogenerated file.
;

; Language - standard language definitions.
&EN

; List of localised vendor names - one per language. At least one must be provided (English [EN]).
; List must correspond to list of languages specified elsewhere in the .pkg
%%{"ScummVM"}
; The non-localised, globally unique vendor name (mandatory)
:"ScummVM"

; UID is the app's UID.
#{"%s"},(%s),%s,%s,%s,  TYPE=SISPATCH

; Supports Series 60 v 3.0.
[0x101F7961], 0, 0, 0, {"Series60ProductID"}
; Supports Series 60 v 5.0.
[0x1028315F], 0, 0, 0, {"Series60ProductID"}
"""

# Template args = (UID from 1st package, major version,
# minor version, build number, MainInstallerName() call).
dependency = """

; ScummVM dependency.
(%s), %s,%s,%s, {"%s"}
"""


# Template args = (extension, extension, extension, extension,
# extension, extension, extension, extension ).
# Where extension == (ordinal or (ordinal and "_test") ).
install_data = """
; Launcher, Application, AIF & Resource file.
"$(EPOCROOT)epoc32\\release\\gcce\\urel\\ScummVM%s.exe" -		"!:\\sys\\bin\\ScummVM%s.exe"
"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\ScummVM%s.rsc" -	"!:\\resource\\apps\\ScummVM%s.rsc"
"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\ScummVM%s_loc.rsc"-	"!:\\resource\\apps\\ScummVM%s_loc.rsc"
"$(EPOCROOT)epoc32\\data\\z\\private\\10003a3f\\apps\\ScummVM%s_reg.rsc" -
							"!:\\private\\10003a3f\\import\\apps\\ScummVM%s_reg.rsc"
"""

install_eclipse_data = """
; Launcher, Application, AIF & Resource file.
"$(EPOCROOT)epoc32\\release\\$(PLATFORM)\\$(TARGET)\\ScummVM%s.exe" -		"!:\\sys\\bin\\ScummVM%s.exe"
"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\ScummVM%s.rsc" -	"!:\\resource\\apps\\ScummVM%s.rsc"
"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\ScummVM%s_loc.rsc"-	"!:\\resource\\apps\\ScummVM%s_loc.rsc"
"$(EPOCROOT)epoc32\\data\\z\\private\\10003a3f\\apps\\ScummVM%s_reg.rsc" -
							"!:\\private\\10003a3f\\import\\apps\\ScummVM%s_reg.rsc"
"""

mif_install = """
    \"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\ScummVM.mif\" -	\"!:\\resource\\apps\\ScummVM.mif\"
"""

package_name = "ScummVM_addon%s"

EXE_COUNT_IN_SIS = 3

def EPOCROOTAsPath():
   return os.path.join( os.path.splitdrive(os.getcwd())[0], os.environ['EPOCROOT'])

def ResolveEpocRoot(buf = install_data):
   return buf.replace("$(EPOCROOT)", EPOCROOTAsPath())

def SaveDependency(pkg):
   uid = get_UIDs()
   AppendToFile(pkg, dependency %(uid[0], sis_major_version, sis_minor_version, sis_build_number,
      MainInstallerName().replace(".pkg", ".sis")) )

def AddInstallData(path, uid, file, index, append = ""):
   if index % EXE_COUNT_IN_SIS == 0:
      pth = path
      if isRelease() is False:
         pth += " unstable"
      print pth
      i = "Games addon %s for ScummVM %s" % (index/EXE_COUNT_IN_SIS + 1, pth)
      SafeWriteFile(file, pkg_template %(i, uid, sis_major_version, sis_minor_version, sis_build_number))
      SaveDependency(file)
   index += 1
   if isRelease() is False:
      index = str(index) + "_test"
   # print "i: %s" % index
   AppendToFile(file, append %(index, index, index, index, index, index, index, index))

def GetPKGName(ord, isCmdline = False):
   tmp = sis_build_number
   if isRelease() is False:
      tmp = str(sis_build_number) + "-unstable"
   name = "ScummVM-%s.%s.%s-games-addon-%s" %(sis_major_version, sis_minor_version, tmp, ord)
   if isCmdline:
      name += "-cmdline"
   return name + ".pkg"

def CreatePKG(index, path, uid):
   i = index/EXE_COUNT_IN_SIS + 1
   file     = os.path.join(path, GetPKGName(i))
   file_cmd = os.path.join(path, GetPKGName(i, True))
   AddInstallData(path, uid, file, index, install_eclipse_data)
   AddInstallData(path, uid, file_cmd, index, ResolveEpocRoot())

def GenerateAddonsPackages(path):
   uids = get_UIDs()
   items = range(0, len(uids))
   for x in [items[i:i + EXE_COUNT_IN_SIS] for i in range(0, len(uids), EXE_COUNT_IN_SIS)]:
      for i in x:
         CreatePKG(i, path, uids[0])

if __name__ == "__main__":
   SetFullBuild()
   GenerateAddonsPackages(path = "S60v3")
