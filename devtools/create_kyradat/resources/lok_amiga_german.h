static const char *const k1IntroStringsAmigaGerman[51] = {
	"This is a text test - 1",
	"This is a text test - 2",
	"Sei gegr""\x81\xE1""t, Kallak...",
	"...M""\x84""chtiger Anf""\x81""hrer der k""\x94""niglichen Mystiker!",
	"Habe ich dich erschreckt?",
	"Malcolm!",
	"Ich habe gestern von deiner Flucht geh""\x94""rt.",
	"Ich habe dich fr""\x81""her erwartet.",
	"Warum sollte ich mich beeilen?",
	"Ich herrsche ""\x81""ber dieses Land!",
	"Dein mickriger Fluch h""\x84""lt mich nicht zur""\x81""ck.",
	"So, erschlag mich doch!",
	"Ich habe nur noch wenig Magie ""\x81""brig.",
	"Ich werde dir zu Leibe r""\x81""cken, zweifle blo""\xE1"" nicht daran...",
	"...du bist jetzt aus Stein...",
	"...Ich lassen dir allein deine Augen.",
	"F""\x81""r Kyrandia vergie""\xE1""e ich nicht eine Tr""\x84""ne...",
	"...aber deine will ich dir nicht nehmen.",
	"Malcolm der Hofnarr ist ausgebrochen!",
	"Er beherrscht nun den Kyragem...",
	"...die Quelle aller Magie in Kyrandia!",
	"",
	"Wie kannst du es wagen, MICH umzuwerfen!",
	"Nicht doch, etwas Besonderes f""\x81""r dich...",
	"Was f""\x81""r ein l""\x84""cherlicher Fluch!",
	"Ich warne dich vorher.",
	"Springe nicht auf DIESEN Baum!",
	"Klettre nicht auf diesen Baum, kleines Eichh""\x94""rnchen!",
	"Buuh!",
	"So ist es viel lustiger...",
	"...nicht wahr?",
	"Ha ha ha...",
	"Sind Finger nicht 'was Tolles?",
	"Es ist gro""\xE1""artig, am Leben zu sein!",
	"Brandon!",
	"Gro""\xE1""vater! Wir haben es geschafft!",
	"Nein! DU hast es geschafft!",
	"Lang lebe K""\x94""nig Brandon!",
	"Lang leben die k""\x94""niglichen Mystiker!",
	"Bauen wir Kyrandia wieder auf!",
	"Eine gute Idee!",
	"Als meine erste k""\x94""nigliche Proklamation,...",
	"...erkl""\x84""re ich Sandalen zur offiziellen Fu""\xE1""bekleidung Kyrandias!",
	"Sehr weise, Brandon!",
	"Das Land ist nicht l""\x84""nger in Trauer!",
	"Und deine Freunde sind gerettet.",
	"Liebe Brynn...",
	"Malcolm ist ausgebrochen!",
	"Er wird bald zu mir kommen.",
	"Bitte hilf Brandon...",
	""
};

static const StringListProvider k1IntroStringsAmigaGermanProvider = { ARRAYSIZE(k1IntroStringsAmigaGerman), k1IntroStringsAmigaGerman };

static const char *const k1ItemNamesAmigaGerman[82] = {
	"Granat",
	"Amethyst",
	"Aquamarin",
	"Diamant",
	"Smaragd",
	"Perle",
	"Rubin",
	"Peridot",
	"Saphir",
	"Opal",
	"Topas",
	"Onyx",
	"Sonnenstein",
	"Mondstein",
	"Regenbogenstein",
	"Magnetstein",
	"Rose",
	"Tulpe",
	"Orchidee",
	"Silberne Rose",
	"Silberne Statuette",
	"Silberm""\x81""nze",
	"Goldm""\x81""nze",
	"Goldring",
	"Der Kelch des K""\x94""nigs",
	"Kienapfel",
	"Eichel",
	"Walnu""\xE1",
	"Immerleuchtende Feuerbeeren",
	"Feuerbeeren",
	"Fisch",
	"Fischgr""\x84""te",
	"Hammelkeule",
	"Knochen",
	"Apfel",
	"Apfelgriebsch",
	"Heidelbeeren",
	"Pilz",
	"Notiz",
	"Murmel",
	"S""\x84""ge",
	"Henkelkreuz",
	"Feder",
	"Ei",
	"Blatt",
	"Kleeblatt",
	"Sternschnuppe",
	"Kristallkugel",
	"Tr""\x84""ne",
	"Spiegel",
	"Eisst""\x81""ck",
	"Fl""\x94""te",
	"Sanduhr",
	"Eisenschl""\x81""ssel",
	"Jadeschl""\x81""ssel",
	"Obsidianschl""\x81""ssel",
	"Roter Trank",
	"Blauer Trank",
	"Gelber Trank",
	"Gr""\x81""ner Trank",
	"Oranger Trank",
	"Violetter Trank",
	"Regenbogentrank",
	"S""\x81\xE1""wasser",
	"Salzwasser",
	"Mineralwasser",
	"Magisches Wasser",
	"Leere Flasche",
	"Schriftrolle",
	"Pergamentfetzen",
	"Roter Weisenstein",
	"Oranger Weisenstein",
	"Gelber Weisenstein",
	"Gr""\x81""ner Weisenstein",
	"T""\x81""rkiser Weisenstein",
	"Blauer Weisenstein",
	"Violetter Weisenstein",
	"Schwerer Stein",
	"K""\x94""nigliche Krone",
	"K""\x94""nigliches Zepter",
	"Goldschl""\x81""ssel",
	"Unbekannter Gegenstand"
};

static const StringListProvider k1ItemNamesAmigaGermanProvider = { ARRAYSIZE(k1ItemNamesAmigaGerman), k1ItemNamesAmigaGerman };

static const char *const k1TakenStringsAmigaGerman[1] = {
	" aufgenommen."
};

static const StringListProvider k1TakenStringsAmigaGermanProvider = { ARRAYSIZE(k1TakenStringsAmigaGerman), k1TakenStringsAmigaGerman };

static const char *const k1PlacedStringsAmigaGerman[1] = {
	" abgelegt."
};

static const StringListProvider k1PlacedStringsAmigaGermanProvider = { ARRAYSIZE(k1PlacedStringsAmigaGerman), k1PlacedStringsAmigaGerman };

static const char *const k1DroppedStringsAmigaGerman[1] = {
	" fallengelassen."
};

static const StringListProvider k1DroppedStringsAmigaGermanProvider = { ARRAYSIZE(k1DroppedStringsAmigaGerman), k1DroppedStringsAmigaGerman };

static const char *const k1NoDropStringsAmigaGerman[2] = {
	"Hier kann nichts mehr abgelegt werden.",
	"Das kann hier nicht abgelegt werden."
};

static const StringListProvider k1NoDropStringsAmigaGermanProvider = { ARRAYSIZE(k1NoDropStringsAmigaGerman), k1NoDropStringsAmigaGerman };

static const char *const k1PutDownStringAmigaGerman[1] = {
	"Vielleicht sollte ich es erst hinlegen."
};

static const StringListProvider k1PutDownStringAmigaGermanProvider = { ARRAYSIZE(k1PutDownStringAmigaGerman), k1PutDownStringAmigaGerman };

static const char *const k1WaitAmuletStringAmigaGerman[1] = {
	"I nehme an, ich mu""\xE1"" warten, bis mein Amulett seine Kraft wiedererlangt."
};

static const StringListProvider k1WaitAmuletStringAmigaGermanProvider = { ARRAYSIZE(k1WaitAmuletStringAmigaGerman), k1WaitAmuletStringAmigaGerman };

static const char *const k1BlackJewelStringAmigaGerman[1] = {
	"Es ist ein Edelstein, aber warum ist er schwarz?"
};

static const StringListProvider k1BlackJewelStringAmigaGermanProvider = { ARRAYSIZE(k1BlackJewelStringAmigaGerman), k1BlackJewelStringAmigaGerman };

static const char *const k1HealingTipStringAmigaGerman[1] = {
	"Mann, das kann ganz n""\x81""tzlich sein, falls ich mich verletze!"
};

static const StringListProvider k1HealingTipStringAmigaGermanProvider = { ARRAYSIZE(k1HealingTipStringAmigaGerman), k1HealingTipStringAmigaGerman };

static const char *const k1PoisonGoneStringAmigaGerman[2] = {
	"Erstaunlich!",
	"Die Wirkung des Giftes hat nachgelassen!"
};

static const StringListProvider k1PoisonGoneStringAmigaGermanProvider = { ARRAYSIZE(k1PoisonGoneStringAmigaGerman), k1PoisonGoneStringAmigaGerman };

static const char *const k1ThePoisonStringsAmigaGerman[4] = {
	"Das Gift...",
	"Ich kann nicht atmen...",
	"Ich f""\x81""hle mich nicht besonders wohl...",
	"Die Schlange mu""\xE1"" \rgiftig gewesen sein!"
};

static const StringListProvider k1ThePoisonStringsAmigaGermanProvider = { ARRAYSIZE(k1ThePoisonStringsAmigaGerman), k1ThePoisonStringsAmigaGerman };

static const char *const k1FluteStringsAmigaGerman[2] = {
	"Klingt nicht besonders beeindruckend.",
	"Die letzte Note war hoch!"
};

static const StringListProvider k1FluteStringsAmigaGermanProvider = { ARRAYSIZE(k1FluteStringsAmigaGerman), k1FluteStringsAmigaGerman };

static const char *const k1WispJewelStringsAmigaGerman[3] = {
	"Im Moment f""\x81""hle ich mich dazu nicht in der Lage.",
	"Ich mu""\xE1"" wahrscheinlich erst mein(e)...",
	"ablegen."
};

static const StringListProvider k1WispJewelStringsAmigaGermanProvider = { ARRAYSIZE(k1WispJewelStringsAmigaGerman), k1WispJewelStringsAmigaGerman };

static const char *const k1MagicJewelStringsAmigaGerman[1] = {
	"Das war eigenartig."
};

static const StringListProvider k1MagicJewelStringsAmigaGermanProvider = { ARRAYSIZE(k1MagicJewelStringsAmigaGerman), k1MagicJewelStringsAmigaGerman };

static const char *const k1FlaskFullStringAmigaGerman[1] = {
	"Die Flasche ist bereits voll."
};

static const StringListProvider k1FlaskFullStringAmigaGermanProvider = { ARRAYSIZE(k1FlaskFullStringAmigaGerman), k1FlaskFullStringAmigaGerman };

static const char *const k1FullFlaskStringAmigaGerman[4] = {
	"Die Flasche ist jetzt mit \rfrischem, klarem Wasser gef""\x81""llt.",
	"Die Flasche ist jetzt mit \rSalzwasser gef""\x81""llt.",
	"Die Flasche ist jetzt mit \rMineralwasser gef""\x81""llt.",
	"Magisches Wasser."
};

static const StringListProvider k1FullFlaskStringAmigaGermanProvider = { ARRAYSIZE(k1FullFlaskStringAmigaGerman), k1FullFlaskStringAmigaGerman };

static const char *const k1OutroHomeStringAmigaGerman[1] = {
	"Ab nach Hause"
};

static const StringListProvider k1OutroHomeStringAmigaGermanProvider = { ARRAYSIZE(k1OutroHomeStringAmigaGerman), k1OutroHomeStringAmigaGerman };

static const char *const k1VeryCleverStringAmigaGerman[1] = {
	"Sehr clever! Aber nichtige Versuche sind zum Scheitern verurteilt."
};

static const StringListProvider k1VeryCleverStringAmigaGermanProvider = { ARRAYSIZE(k1VeryCleverStringAmigaGerman), k1VeryCleverStringAmigaGerman };

static const char *const k1GUIStringsAmigaGerman[49] = {
	"Die Legende von Kyrandia",
	"Ein Spiel laden",
	"Dieses Spiel sichern",
	"Spielsteuerungen",
	"Spiel beenden",
	"Spiel wieder aufnehmen",
	"Spielsteuerungen",
	"Welches Spiel soll noch einmal geladen werden?",
	"W""\x84""hlen Sie den Platz zum Sichern aus.",
	"[ LEERER PLATZ ]",
	"Abbrechen",
	"Beschreibung des gesicherten Spiels eingeben.",
	"Sichern",
	"Ruhe in Frieden, Brandon.",
	"Soll das Spiel wirklich beendet werden?",
	"XXXXX",
	"",
	"",
	"",
	"",
	"",
	"",
	"XXXXX",
	"",
	"",
	"",
	"",
	"",
	"",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXXXXXXX",
	"Hauptmen""\x81",
	"An",
	"Aus",
	"Ja",
	"Nein",
	"",
	"\x01""[""\xA2",
	"\x01""[""\xB2",
	"\x01""[""\xBA",
	"\x01""[""\xC2",
	"\x01""[""\xCA",
	"\x01""[""\xA2",
	"\x01""[""\xBA",
	"\x01""[""\xC2",
	"\x01""[""\xDA""Schrittempo",
	"Textgeschwindigkeit",
	"Die Musik ist",
	"Die Soundeffekte sind"
};

static const StringListProvider k1GUIStringsAmigaGermanProvider = { ARRAYSIZE(k1GUIStringsAmigaGerman), k1GUIStringsAmigaGerman };

static const char *const k1NewGameStringAmigaGerman[1] = {
	"[ EIN NEUES SPIEL ANFANGEN ]"
};

static const StringListProvider k1NewGameStringAmigaGermanProvider = { ARRAYSIZE(k1NewGameStringAmigaGerman), k1NewGameStringAmigaGerman };

static const char *const k1ConfigStringsAmigaGerman[6] = {
	"am langsamsten",
	"langsam",
	"normal",
	"schnell",
	"am schnellsten",
	"anklickbar"
};

static const StringListProvider k1ConfigStringsAmigaGermanProvider = { ARRAYSIZE(k1ConfigStringsAmigaGerman), k1ConfigStringsAmigaGerman };

static const byte k1CreditsStringsAmigaGerman[1275] = {
	0x05, 0x46, 0x61, 0x62, 0x6C, 0x65, 0x73, 0x20,
	0x26, 0x20, 0x46, 0x69, 0x65, 0x6E, 0x64, 0x73,
	0x0D, 0x05, 0x42, 0x6F, 0x6F, 0x6B, 0x20, 0x49,
	0x0D, 0x05, 0x54, 0x48, 0x45, 0x20, 0x4C, 0x45,
	0x47, 0x45, 0x4E, 0x44, 0x20, 0x4F, 0x46, 0x20,
	0x4B, 0x59, 0x52, 0x41, 0x4E, 0x44, 0x49, 0x41,
	0x0D, 0x0D, 0x05, 0x56, 0x65, 0x72, 0x94, 0x66,
	0x66, 0x65, 0x6E, 0x74, 0x6C, 0x69, 0x63, 0x68,
	0x74, 0x20, 0x76, 0x6F, 0x6E, 0x0D, 0x05, 0x57,
	0x65, 0x73, 0x74, 0x77, 0x6F, 0x6F, 0x64, 0x20,
	0x53, 0x74, 0x75, 0x64, 0x69, 0x6F, 0x73, 0x0D,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x03,
	0x52, 0x65, 0x67, 0x69, 0x65, 0x3A, 0x04, 0x42,
	0x72, 0x65, 0x74, 0x74, 0x20, 0x57, 0x2E, 0x20,
	0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0D, 0x0D,
	0x03, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6E, 0x3A,
	0x04, 0x4D, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6C,
	0x20, 0x4C, 0x65, 0x67, 0x67, 0x0D, 0x04, 0x52,
	0x69, 0x63, 0x6B, 0x20, 0x50, 0x61, 0x72, 0x6B,
	0x73, 0x0D, 0x04, 0x50, 0x61, 0x75, 0x6C, 0x20,
	0x53, 0x2E, 0x20, 0x4D, 0x75, 0x64, 0x72, 0x61,
	0x0D, 0x0D, 0x03, 0x50, 0x72, 0x6F, 0x67, 0x72,
	0x61, 0x6D, 0x6D, 0x69, 0x65, 0x72, 0x75, 0x6E,
	0x67, 0x73, 0x6C, 0x65, 0x69, 0x74, 0x75, 0x6E,
	0x67, 0x3A, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61,
	0x65, 0x6C, 0x20, 0x4C, 0x65, 0x67, 0x67, 0x0D,
	0x0D, 0x03, 0x54, 0x65, 0x78, 0x74, 0x70, 0x72,
	0x6F, 0x67, 0x72, 0x61, 0x6D, 0x6D, 0x69, 0x65,
	0x72, 0x65, 0x72, 0x3A, 0x04, 0x53, 0x63, 0x6F,
	0x74, 0x74, 0x20, 0x42, 0x6F, 0x77, 0x65, 0x6E,
	0x0D, 0x0D, 0x03, 0x41, 0x6D, 0x69, 0x67, 0x61,
	0x2D, 0x50, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D,
	0x6D, 0x69, 0x65, 0x72, 0x65, 0x72, 0x3A, 0x04,
	0x42, 0x69, 0x6C, 0x6C, 0x20, 0x53, 0x74, 0x6F,
	0x6B, 0x65, 0x73, 0x0D, 0x0D, 0x03, 0x56, 0x6F,
	0x72, 0x2D, 0x20, 0x75, 0x6E, 0x64, 0x20, 0x4E,
	0x61, 0x63, 0x68, 0x73, 0x70, 0x61, 0x6E, 0x6E,
	0x3A, 0x04, 0x43, 0x68, 0x72, 0x69, 0x73, 0x74,
	0x6F, 0x70, 0x68, 0x65, 0x72, 0x20, 0x59, 0x61,
	0x74, 0x65, 0x73, 0x0D, 0x0D, 0x03, 0x4B, 0x81,
	0x6E, 0x73, 0x74, 0x6C, 0x65, 0x72, 0x69, 0x73,
	0x63, 0x68, 0x65, 0x20, 0x47, 0x65, 0x73, 0x74,
	0x61, 0x6C, 0x74, 0x75, 0x6E, 0x67, 0x3A, 0x04,
	0x52, 0x69, 0x63, 0x6B, 0x20, 0x50, 0x61, 0x72,
	0x6B, 0x73, 0x0D, 0x04, 0x52, 0x65, 0x6E, 0x20,
	0x4F, 0x6C, 0x73, 0x65, 0x6E, 0x0D, 0x04, 0x4C,
	0x6F, 0x75, 0x69, 0x73, 0x65, 0x20, 0x53, 0x61,
	0x6E, 0x64, 0x6F, 0x76, 0x61, 0x6C, 0x0D, 0x04,
	0x4A, 0x6F, 0x73, 0x65, 0x70, 0x68, 0x20, 0x48,
	0x65, 0x77, 0x69, 0x74, 0x74, 0x20, 0x49, 0x56,
	0x0D, 0x04, 0x4A, 0x75, 0x64, 0x69, 0x74, 0x68,
	0x20, 0x50, 0x65, 0x74, 0x65, 0x72, 0x73, 0x6F,
	0x6E, 0x0D, 0x04, 0x41, 0x61, 0x72, 0x6F, 0x6E,
	0x20, 0x50, 0x6F, 0x77, 0x65, 0x6C, 0x6C, 0x0D,
	0x04, 0x45, 0x6C, 0x69, 0x65, 0x20, 0x41, 0x72,
	0x61, 0x62, 0x69, 0x61, 0x6E, 0x0D, 0x04, 0x45,
	0x72, 0x69, 0x63, 0x20, 0x53, 0x68, 0x75, 0x6C,
	0x74, 0x73, 0x0D, 0x0D, 0x03, 0x54, 0x6F, 0x6E,
	0x72, 0x65, 0x67, 0x69, 0x65, 0x3A, 0x04, 0x50,
	0x61, 0x75, 0x6C, 0x20, 0x53, 0x2E, 0x20, 0x4D,
	0x75, 0x64, 0x72, 0x61, 0x0D, 0x0D, 0x03, 0x4D,
	0x75, 0x73, 0x69, 0x6B, 0x3A, 0x04, 0x46, 0x72,
	0x61, 0x6E, 0x6B, 0x20, 0x4B, 0x6C, 0x65, 0x70,
	0x61, 0x63, 0x6B, 0x69, 0x0D, 0x0D, 0x03, 0x53,
	0x6F, 0x75, 0x6E, 0x64, 0x65, 0x66, 0x66, 0x65,
	0x6B, 0x74, 0x65, 0x3A, 0x04, 0x44, 0x77, 0x69,
	0x67, 0x68, 0x74, 0x20, 0x4F, 0x6B, 0x61, 0x68,
	0x61, 0x72, 0x61, 0x0D, 0x0D, 0x03, 0x41, 0x75,
	0x74, 0x6F, 0x72, 0x3A, 0x04, 0x22, 0x43, 0x6F,
	0x63, 0x6F, 0x22, 0x0D, 0x0D, 0x03, 0x51, 0x75,
	0x61, 0x6C, 0x69, 0x74, 0x84, 0x74, 0x73, 0x73,
	0x69, 0x63, 0x68, 0x65, 0x72, 0x75, 0x6E, 0x67,
	0x3A, 0x04, 0x47, 0x6C, 0x65, 0x6E, 0x6E, 0x20,
	0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0D, 0x04,
	0x4D, 0x61, 0x74, 0x74, 0x20, 0x43, 0x6F, 0x6C,
	0x6C, 0x69, 0x6E, 0x73, 0x0D, 0x04, 0x42, 0x69,
	0x6C, 0x6C, 0x20, 0x46, 0x6F, 0x73, 0x74, 0x65,
	0x72, 0x0D, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61,
	0x65, 0x6C, 0x20, 0x4C, 0x69, 0x67, 0x68, 0x74,
	0x6E, 0x65, 0x72, 0x0D, 0x04, 0x4D, 0x69, 0x63,
	0x68, 0x61, 0x65, 0x6C, 0x20, 0x47, 0x61, 0x74,
	0x65, 0x72, 0x0D, 0x04, 0x45, 0x75, 0x67, 0x65,
	0x6E, 0x65, 0x20, 0x4D, 0x61, 0x72, 0x74, 0x69,
	0x6E, 0x0D, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61,
	0x65, 0x6C, 0x20, 0x47, 0x6C, 0x6F, 0x73, 0x65,
	0x63, 0x6B, 0x69, 0x0D, 0x04, 0x4A, 0x75, 0x73,
	0x74, 0x69, 0x6E, 0x20, 0x4E, 0x6F, 0x72, 0x72,
	0x0D, 0x04, 0x54, 0x6F, 0x70, 0x20, 0x53, 0x74,
	0x61, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6E, 0x67, 0x0D, 0x04, 0x54, 0x65, 0x73, 0x74,
	0x69, 0x6E, 0x67, 0x20, 0x31, 0x2C, 0x20, 0x32,
	0x2C, 0x20, 0x33, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
	0x05, 0x42, 0x65, 0x73, 0x6F, 0x6E, 0x64, 0x65,
	0x72, 0x65, 0x72, 0x20, 0x44, 0x61, 0x6E, 0x6B,
	0x20, 0x67, 0x69, 0x6C, 0x74, 0x3A, 0x0D, 0x05,
	0x4C, 0x79, 0x6C, 0x65, 0x20, 0x4A, 0x2E, 0x20,
	0x48, 0x61, 0x6C, 0x6C, 0x0D, 0x05, 0x44, 0x61,
	0x76, 0x69, 0x64, 0x20, 0x42, 0x69, 0x73, 0x68,
	0x6F, 0x70, 0x0D, 0x05, 0x22, 0x54, 0x68, 0x65,
	0x20, 0x44, 0x6F, 0x63, 0x22, 0x0D, 0x05, 0x75,
	0x6E, 0x64, 0x0D, 0x05, 0x53, 0x50, 0x52, 0x4F,
	0x43, 0x4B, 0x45, 0x54, 0x53, 0x0D, 0x0D, 0x0D,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05, 0x4D, 0x49,
	0x54, 0x57, 0x49, 0x52, 0x4B, 0x45, 0x4E, 0x44,
	0x45, 0x20, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45,
	0x4E, 0x0D, 0x0D, 0x05, 0x4D, 0x61, 0x6C, 0x63,
	0x6F, 0x6C, 0x6D, 0x20, 0x64, 0x65, 0x72, 0x20,
	0x48, 0x6F, 0x66, 0x6E, 0x61, 0x72, 0x72, 0x0D,
	0x05, 0x42, 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6E,
	0x20, 0x64, 0x65, 0x72, 0x20, 0x4B, 0x81, 0x68,
	0x6E, 0x65, 0x0D, 0x05, 0x42, 0x72, 0x61, 0x6E,
	0x64, 0x79, 0x77, 0x69, 0x6E, 0x65, 0x20, 0x75,
	0x6E, 0x64, 0x20, 0x44, 0x61, 0x72, 0x6D, 0x0D,
	0x05, 0x50, 0x72, 0x69, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x6E, 0x20, 0x42, 0x72, 0x79, 0x6E,
	0x6E, 0x0D, 0x05, 0x5A, 0x61, 0x6E, 0x74, 0x68,
	0x69, 0x61, 0x2C, 0x20, 0x64, 0x69, 0x65, 0x20,
	0x4C, 0x61, 0x64, 0x79, 0x20, 0x64, 0x65, 0x72,
	0x20, 0x41, 0x6C, 0x63, 0x68, 0x65, 0x6D, 0x69,
	0x65, 0x0D, 0x05, 0x48, 0x65, 0x72, 0x6D, 0x61,
	0x6E, 0x20, 0x64, 0x65, 0x72, 0x20, 0x47, 0x65,
	0x73, 0x63, 0x68, 0x69, 0x63, 0x6B, 0x74, 0x65,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05,
	0x41, 0x6C, 0x6C, 0x65, 0x20, 0x8E, 0x68, 0x6E,
	0x6C, 0x69, 0x63, 0x68, 0x6B, 0x65, 0x69, 0x74,
	0x65, 0x6E, 0x20, 0x76, 0x6F, 0x6E, 0x20, 0x69,
	0x6D, 0x20, 0x53, 0x70, 0x69, 0x65, 0x6C, 0x20,
	0x61, 0x75, 0x66, 0x74, 0x72, 0x65, 0x74, 0x65,
	0x6E, 0x64, 0x65, 0x6E, 0x0D, 0x05, 0x46, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x6E, 0x20, 0x6D, 0x69,
	0x74, 0x20, 0x6C, 0x65, 0x62, 0x65, 0x6E, 0x64,
	0x65, 0x6E, 0x20, 0x6F, 0x64, 0x65, 0x72, 0x20,
	0x76, 0x65, 0x72, 0x73, 0x74, 0x6F, 0x72, 0x62,
	0x65, 0x6E, 0x65, 0x6E, 0x0D, 0x05, 0x50, 0x65,
	0x72, 0x73, 0x6F, 0x6E, 0x65, 0x6E, 0x20, 0x73,
	0x69, 0x6E, 0x64, 0x20, 0x72, 0x65, 0x69, 0x6E,
	0x20, 0x7A, 0x75, 0x66, 0x8E, 0x6C, 0x6C, 0x69,
	0x67, 0x2E, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05,
	0x4D, 0x61, 0x78, 0x54, 0x72, 0x61, 0x78, 0xE2,
	0x20, 0x6D, 0x75, 0x73, 0x69, 0x63, 0x20, 0x73,
	0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x0D,
	0x05, 0x20, 0xE3, 0x20, 0x31, 0x39, 0x39, 0x32,
	0x20, 0x53, 0x79, 0x6C, 0x76, 0x61, 0x6E, 0x20,
	0x54, 0x65, 0x63, 0x68, 0x6E, 0x69, 0x63, 0x61,
	0x6C, 0x20, 0x41, 0x72, 0x74, 0x73, 0x0D, 0x05,
	0x4C, 0x69, 0x63, 0x65, 0x6E, 0x73, 0x65, 0x64,
	0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x44, 0x72, 0x65, 0x61, 0x6D, 0x65, 0x72, 0x73,
	0x20, 0x47, 0x75, 0x69, 0x6C, 0x64, 0x2C, 0x20,
	0x49, 0x6E, 0x63, 0x2E, 0x0D, 0x0D, 0x0D, 0x0D,
	0x0D, 0x0D, 0x05, 0x43, 0x6F, 0x70, 0x79, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x20, 0x28, 0x63, 0x29,
	0x20, 0x31, 0x39, 0x39, 0x32, 0x2C, 0x20, 0x57,
	0x65, 0x73, 0x74, 0x77, 0x6F, 0x6F, 0x64, 0x20,
	0x53, 0x74, 0x75, 0x64, 0x69, 0x6F, 0x73, 0x2C,
	0x20, 0x49, 0x6E, 0x63, 0x2E, 0x0D, 0x05, 0x41,
	0x6C, 0x6C, 0x65, 0x20, 0x52, 0x65, 0x63, 0x68,
	0x74, 0x65, 0x20, 0x56, 0x6F, 0x72, 0x62, 0x65,
	0x68, 0x61, 0x6C, 0x74, 0x65, 0x6E, 0x2E, 0x0D,
	0x0D, 0x0D, 0x0D
};

static const ByteProvider k1CreditsStringsAmigaGermanProvider = { ARRAYSIZE(k1CreditsStringsAmigaGerman), k1CreditsStringsAmigaGerman };

