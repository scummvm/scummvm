static const char *const k1IntroStringsDOSChineseTrad[51] = {
	"This is a text test - 1",
	"This is a text test - 2",
	"\xa7""A""\xa6""n""\xb0\xda\xa1""I""\xb3\xcd\xb5\xdc\xa7""J""\xa1""K",
	"\xa1""K""\xa4""O""\xb6""q""\xb1""j""\xa4""j""\xaa\xba\xac\xd3\xae""a""\xaf\xab\xaf\xb5\xbe\xc7\xb7""|""\xbb\xe2\xbe\xc9\xaa\xcc\xa1""I",
	"\xa7\xda\xc0""~""\xa8\xec\xa7""A""\xa4""F""\xb6\xdc\xa1""H",
	"\xba\xbf\xba\xb8\xb1""F""\xa1""I",
	"\xa7\xda\xac""Q""\xa4\xd1\xc5\xa5\xa8\xec\xa7""A""\xa4""w""\xb8""g""\xb0""k""\xb2\xe6\xaa\xba\xae\xf8\xae\xa7\xa1""C",
	"\xb4""N""\xaa\xbe\xb9""D""\xa7""A""\xa4""@""\xa9""w""\xb7""|""\xa8\xd3\xa7\xe4\xa7\xda\xa1""C",
	"\xac\xb0\xac\xc6\xbb\xf2\xa7\xda\xad""n""\xbb\xb0\xae\xc9\xb6\xa1\xa1""H",
	"\xb2""{""\xa6""b""\xac""O""\xa7\xda\xb2\xce\xaa""v""\xb3""o""\xad\xd3\xa4""j""\xb3\xb0\xa1""I",
	"\xa7""A""\xa8\xba\xa5""i""\xaf\xba\xaa\xba\xb6""A""\xa9""G""\xa4""w""\xb8""g""\xb5""L""\xaa""k""\xb1\xb1\xa8\xee\xa7\xda\xa1""I",
	"\xa6""n""\xa1""A""\xae\xf8\xb7\xc0\xa7\xda\xa7""a""\xa1""I",
	"\xa7\xda\xaa\xba\xaa""k""\xa4""O""\xa4""w""\xb8""g""\xb3\xd1\xa4""U""\xa4\xa3\xa6""h""\xa1""C",
	"\xa8""S""\xbf\xf9\xa1""I""\xa7\xda\xa5\xbf\xac""O""\xa8\xd3\xa7\xe4\xa7""A""\xb3\xf8\xa4\xb3\xa1""K",
	"\xa1""K""\xb2""{""\xa6""b""\xa7""A""\xa4""w""\xb8""g""\xc5\xdc\xa6\xa8\xa5\xdb\xb9\xb3\xa1""K",
	"\xa1""K""\xa6\xfd\xac""O""\xa7\xda\xab""O""\xaf""d""\xa7""A""\xaa\xba\xb2\xb4\xb7\xfa\xa1""C",
	"\xa7\xda\xa4\xa3\xb7""|""\xac\xb0\xb3\xcd\xc4\xf5\xad""}""\xa8\xc8\xac""y""\xa4""U""\xa5\xf4\xa6\xf3\xb2\xb4\xb2""\\""\xa1""K",
	"\xa1""K""\xa6\xfd\xac""O""\xa7\xda\xa4\xa3\xa7\xc6\xb1\xe6\xad\xe9\xb9\xdc\xa7""A""\xaa\xba\xb3""o""\xb6\xb5\xc5""v""\xa7""Q""\xa1""I",
	"\xa7\xcb\xa6\xda\xba\xbf\xba\xb8\xb1""F""\xa4""w""\xb8""g""\xb1""o""\xa8\xec\xa6\xdb\xa5\xd1\xa1""I",
	"\xa5""L""\xa4""w""\xb8""g""\xb1\xb1\xa8\xee\xa4""F""\xb3\xcd\xc4\xf5\xad""}""\xa8\xc8\xaa\xba\xaa""k""\xa4""O""\xa8\xd3\xb7\xbd\xa1""K",
	"\xa1""K""\xb3\xcd\xb9""p""\xa4\xa7\xa5\xdb\xa1""I",
	"",
	"\xa7""A""\xb3\xba\xb4\xb1\xb2\xcc\xad\xcb\xa7\xda\xa1""I",
	"\xb5\xa5\xa4""@""\xa4""U""\xa1""A""\xa7\xda\xa6\xb3\xa7\xf3\xa6""n""\xaa\xba\xa5""D""\xb7""N""\xa1""K",
	"\xa4""@""\xad\xd3\xa6\xb3\xbd\xec\xaa\xba\xb3\xb4\xa8\xc0\xa1""I",
	"\xa6\xfd\xac""O""\xa7\xda\xa5\xb2\xb6\xb7\xa8\xc6\xa5\xfd\xc4\xb5\xa7""i""\xa1""C",
	"\xa4\xa3\xad""n""\xb8\xf5\xa8\xec\xa8\xba\xb4\xca\xbe\xf0\xa4""W""\xa1""I",
	"\xa4\xa3\xad""n""\xaa\xa6\xa4""W""\xa5""h""\xa7""r""\xa1""A""\xa4""p""\xaa""Q""\xb9\xab\xa1""K",
	"\xc0""~""\xa1""I",
	"\xb3""o""\xbc\xcb\xa6\xb3\xbd\xec\xb1""o""\xa6""h""\xa4""F""\xa1""K",
	"\xa1""K""\xa4\xa3\xac""O""\xb6\xdc\xa1""H",
	"\xab\xa2\xa1""K""\xab\xa2\xa1""K""\xab\xa2\xa1""K",
	"\xa7\xda\xaa\xba\xa4\xe2\xab\xfc\xa4""S""\xaf\xe0\xb0\xca\xa4""F""\xa1""H",
	"\xaf\xe0\xac\xa1\xb5\xdb\xaf""u""\xac""O""\xa4\xd3\xa6""n""\xa4""F""\xa1""I",
	"\xa5\xac\xc4\xf5\xb5""n""\xa1""I",
	"\xb7\xdd\xb7\xdd\xa1""I""\xa7\xda\xad\xcc\xa6\xa8\xa5""\\""\xa4""F""\xa1""I",
	"\xa4\xa3\xa1""I""\xa7""A""\xa6\xa8\xa5""\\""\xa4""F""\xa1""I",
	"\xa5\xac\xc4\xf5\xb5""n""\xb0\xea\xa4\xfd\xb8""U""\xb7\xb3\xa1""I",
	"\xac\xd3\xae""a""\xaf\xab\xaf\xb5\xbe\xc7\xaa\xcc\xb8""U""\xb7\xb3\xa1""I",
	"\xb2""{""\xa6""b""\xa1""A""\xc5\xfd\xa7\xda\xad\xcc\xa7\xe2\xb3\xcd\xc4\xf5\xad""}""\xa8\xc8\xab\xec\xb4""_""\xad\xec\xaa\xac\xa1""I",
	"\xaf""u""\xac""O""\xad\xd3\xa6""n""\xa5""D""\xb7""N""\xa1""I",
	"\xa7\xda\xb5""n""\xa4""W""\xa4\xfd\xa6\xec\xab\xe1\xaa\xba\xb2\xc4\xa4""@""\xb9""D""\xa9""R""\xa5""O""\xa1""K",
	"\xa1""K""\xb4""N""\xac""O""\xc5\xfd\xa9\xec\xbe""c""\xa6\xa8\xac\xb0\xb3\xcd\xc4\xf5\xad""}""\xa8\xc8\xaa\xba\xa5\xbf\xa6\xa1\xac\xef\xb5\xdb\xa1""I",
	"\xae\xa5\xb3\xdf\xa7""A""\xa1""A""\xa5\xac\xc4\xf5\xb5""n""\xa1""I",
	"\xa4""j""\xa6""a""\xa4""w""\xb8""g""\xa4\xa3\xa6""A""\xad\xfa\xaa""_""\xa1""K",
	"\xa7""A""\xaa\xba\xaa""B""\xa4\xcd\xad\xcc\xa4""]""\xb3\xa3\xab\xec\xb4""_""\xa5\xbf\xb1""`""\xa4""F""\xa1""I",
	"\xa5\xac\xb5\xdc\xae\xa6\xa1""K",
	"\xa1""K""\xba\xbf\xba\xb8\xb1""F""\xa4""w""\xb8""g""\xb0""k""\xb2\xe6\xa4""F""\xa1""I",
	"\xa5""L""\xab\xdc\xa7\xd6\xb4""N""\xb7""|""\xa8\xd3\xa7\xe4\xa7\xda\xa1""C",
	"\xbd\xd0\xa9""p""\xc0\xb0\xa7""U""\xa5\xac\xc4\xf5\xb5""n""\xa1""K",
	""
};

static const StringListProvider k1IntroStringsDOSChineseTradProvider = { ARRAYSIZE(k1IntroStringsDOSChineseTrad), k1IntroStringsDOSChineseTrad };

static const char *const k1ItemNamesDOSChineseTrad[107] = {
	"\xcf""C""\xba""h""\xa5\xdb",
	"\xb5\xb5\xa4\xf4\xb4\xb9",
	"\xc2\xc5\xa4\xf4\xb4\xb9",
	"\xc6""p""\xa5\xdb",
	"\xbb""B""\xbb""A",
	"\xac\xc3\xaf""]",
	"\xac\xf5\xc4""_""\xa5\xdb",
	"\xba\xf1\xbe\xf1\xc6""V""\xa5\xdb",
	"\xc2\xc5\xc4""_""\xa5\xdb",
	"\xb3""J""\xa5\xd5\xa5\xdb",
	"\xb6\xc0\xa5\xc9",
	"\xba\xbf\xb7\xea",
	"\xa4\xd3\xb6\xa7\xa5\xdb",
	"\xa4\xeb\xa4\xa7\xa5\xdb",
	"\xb1""m""\xad""i""\xa5\xdb",
	"\xa4\xd1\xb5""M""\xba\xcf\xa5\xdb",
	"\xaa\xb4\xba\xc0",
	"\xc6""{""\xaa\xf7\xad\xbb",
	"\xc4\xf5\xaa\xe1",
	"\xbb\xc8\xaa\xb4\xba\xc0",
	"\xbb\xc8\xb6\xec\xb9\xb3",
	"\xbb\xc8\xb9\xf4",
	"\xaa\xf7\xb9\xf4",
	"\xaa\xf7\xa7\xd9\xab\xfc",
	"\xac\xd3\xae""a""\xb8""t""\xaa""M",
	"\xaa""Q""\xaa""G",
	"\xbe\xf3\xb9\xea",
	"\xad""J""\xae\xe7",
	"\xb5""o""\xa5\xfa\xaa\xba\xa4\xf5\xb2\xf9",
	"\xa4\xf5\xb2\xf9",
	"\xa4\xf5\xb2\xf9",
	"\xa4\xf5\xb2\xf9",
	"\xa4\xf5\xb2\xf9",
	"\xa4\xf5\xb2\xf9",
	"\xb3\xbd",
	"\xb3\xbd\xb0\xa9",
	"\xa6\xcf\xbb""L""\xa6\xd7",
	"\xb0\xa9\xc0""Y",
	"\xc4\xab\xaa""G",
	"\xc4\xab\xaa""G""\xae\xd6",
	"\xc2\xc5\xb2\xf9",
	"\xc4\xa8\xdb\xa3",
	"\xb5\xa7\xb0""O",
	"\xbc""u""\xaf""]",
	"\xbf\xf7\xa4""l",
	"\xc5""@""\xb2\xc5",
	"\xa6\xd0\xa4\xf2",
	"\xb3""J",
	"\xb8\xad\xa4""l",
	"\xdc""`""\xbc\xdf\xaf\xf3",
	"\xac""y""\xac""P",
	"\xa4\xf4\xb4\xb9\xb2""y",
	"\xb2""\\""\xba""w",
	"\xc3\xe8\xa4""l",
	"\xa6""B""\xa4\xf9",
	"\xb1\xc6\xb2\xc3",
	"\xa8""F""\xba""|",
	"\xc5""K""\xc6""_""\xb0\xcd",
	"\xa5\xc9\xc6""_""\xb0\xcd",
	"\xb6\xc2\xc2""`""\xa5\xdb\xc6""_""\xb0\xcd",
	"\xac\xf5\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xac\xf5\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xc2\xc5\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xc2\xc5\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xb6\xc0\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xb6\xc0\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xba\xf1\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xbe\xef\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xb5\xb5\xa6\xe2\xc3\xc4\xbe\xaf",
	"\xb1""m""\xad""i""\xc3\xc4\xbe\xaf",
	"\xac""u""\xa4\xf4",
	"\xac""u""\xa4\xf4",
	"\xc6""Q""\xa4\xf4",
	"\xc6""Q""\xa4\xf4",
	"\xc4""q""\xac""u""\xa4\xf4",
	"\xc4""q""\xac""u""\xa4\xf4",
	"\xc5""]""\xaa""k""\xa4\xf4",
	"\xc5""]""\xaa""k""\xa4\xf4",
	"\xaa\xc5\xb2""~",
	"\xaa\xc5\xb2""~",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa8\xf7\xb6""b",
	"\xa6\xcf\xa5\xd6\xaf\xc8\xb8""H""\xa4\xf9",
	"\xa6\xcf\xa5\xd6\xaf\xc8\xb8""H""\xa4\xf9",
	"\xa6\xcf\xa5\xd6\xaf\xc8\xb8""H""\xa4\xf9",
	"\xa6\xcf\xa5\xd6\xaf\xc8\xb8""H""\xa4\xf9",
	"\xa6\xcf\xa5\xd6\xaf\xc8\xb8""H""\xa4\xf9",
	"\xac\xf5\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xbe\xef\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xb6\xc0\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xba\xf1\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xab""C""\xba\xf1\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xc2\xc5\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xb5\xb5\xa6\xe2\xc5""]""\xaa""k""\xa5\xdb",
	"\xa5\xdb\xb6\xf4",
	"\xac\xd3\xaa\xcc\xa4\xa7\xab""a",
	"\xac\xd3\xae""a""\xc5""v""\xa7\xfa",
	"\xaa\xf7\xc6""_""\xb0\xcd",
	"\xa4\xa3\xaa\xbe\xa6""W""\xaa\xba\xaa\xab\xab""~"
};

static const StringListProvider k1ItemNamesDOSChineseTradProvider = { ARRAYSIZE(k1ItemNamesDOSChineseTrad), k1ItemNamesDOSChineseTrad };

static const char *const k1TakenStringsDOSChineseTrad[2] = {
	"\xae\xb3\xa8\xfa",
	"\xae\xb3\xa8\xfa"
};

static const StringListProvider k1TakenStringsDOSChineseTradProvider = { ARRAYSIZE(k1TakenStringsDOSChineseTrad), k1TakenStringsDOSChineseTrad };

static const char *const k1PlacedStringsDOSChineseTrad[1] = {
	"\xa9\xf1\xb8""m"
};

static const StringListProvider k1PlacedStringsDOSChineseTradProvider = { ARRAYSIZE(k1PlacedStringsDOSChineseTrad), k1PlacedStringsDOSChineseTrad };

static const char *const k1DroppedStringsDOSChineseTrad[1] = {
	"\xa5\xe1\xb1\xf3"
};

static const StringListProvider k1DroppedStringsDOSChineseTradProvider = { ARRAYSIZE(k1DroppedStringsDOSChineseTrad), k1DroppedStringsDOSChineseTrad };

static const char *const k1NoDropStringsDOSChineseTrad[2] = {
	"\xb3""o""\xad\xd3\xb3\xf5\xb4\xba\xa4""w""\xb8""g""\xa9\xf1\xa4\xa3\xa4""U""\xa7\xf3\xa6""h""\xaa\xba\xaa\xab\xab""~""\xa4""F",
	"\xa7""A""\xa4\xa3\xaf\xe0\xa7\xe2\xa5\xa6\xa9\xf1\xa6""b""\xa8\xba\xb8\xcc"
};

static const StringListProvider k1NoDropStringsDOSChineseTradProvider = { ARRAYSIZE(k1NoDropStringsDOSChineseTrad), k1NoDropStringsDOSChineseTrad };

static const char *const k1PutDownStringDOSChineseTrad[1] = {
	"\xa4""]""\xb3""\\""\xa7\xda\xc0\xb3\xb8\xd3\xa5\xfd\xa7\xe2\xa5\xa6\xa9\xf1\xa4""U""\xa8\xd3\xa1""C"
};

static const StringListProvider k1PutDownStringDOSChineseTradProvider = { ARRAYSIZE(k1PutDownStringDOSChineseTrad), k1PutDownStringDOSChineseTrad };

static const char *const k1WaitAmuletStringDOSChineseTrad[1] = {
	"\xa7\xda\xbb""{""\xac\xb0\xc0\xb3\xb8\xd3\xa5\xfd\xb5\xa5\xa7\xda\xaa\xba\xc5""@""\xa8\xad\xb2\xc5\xab\xec\xb4""_""\xaa""k""\xa4""O""\xa1""C"
};

static const StringListProvider k1WaitAmuletStringDOSChineseTradProvider = { ARRAYSIZE(k1WaitAmuletStringDOSChineseTrad), k1WaitAmuletStringDOSChineseTrad };

static const char *const k1BlackJewelStringDOSChineseTrad[1] = {
	"\xb3""o""\xac""O""\xa4""@""\xc1\xfb\xc4""_""\xa5\xdb\xa1""A""\xa6\xfd\xac""O""\xa5\xa6\xac\xb0\xac\xc6\xbb\xf2\xac""O""\xb6\xc2\xa6\xe2\xaa\xba\xa1""H"
};

static const StringListProvider k1BlackJewelStringDOSChineseTradProvider = { ARRAYSIZE(k1BlackJewelStringDOSChineseTrad), k1BlackJewelStringDOSChineseTrad };

static const char *const k1HealingTipStringDOSChineseTrad[1] = {
	"\xb6\xe2\xa1""A""\xb3""o""\xa6""b""\xa7\xda\xa8\xfc\xb6\xcb\xaa\xba\xae\xc9\xad\xd4\xab\xdc\xa6\xb3\xa5\xce\xa1""C"
};

static const StringListProvider k1HealingTipStringDOSChineseTradProvider = { ARRAYSIZE(k1HealingTipStringDOSChineseTrad), k1HealingTipStringDOSChineseTrad };

static const char *const k1PoisonGoneStringDOSChineseTrad[2] = {
	"\xaf""u""\xac""O""\xc5\xe5\xa4""H""\xa1""I",
	"\xac""r""\xaf\xc0\xa4""w""\xb8""g""\xae\xf8\xb0""h""\xa4""F""\xa1""I"
};

static const StringListProvider k1PoisonGoneStringDOSChineseTradProvider = { ARRAYSIZE(k1PoisonGoneStringDOSChineseTrad), k1PoisonGoneStringDOSChineseTrad };

static const char *const k1ThePoisonStringsDOSChineseTrad[4] = {
	"\xac""r""\xa9\xca\xb5""o""\xa7""@""\xa1""K",
	"\xa7\xda\xa4\xa3\xaf\xe0\xa9""I""\xa7""l""\xa4""F""\xa1""K",
	"\xa7\xda\xc4\xb1\xb1""o""\xa6\xb3\xc2""I""\xa4\xa3\xb5\xce\xaa""A""\xa1""K",
	"\xa8\xba\xb1\xf8\xb3""D""\xa4""@""\xa9""w""\xa6\xb3\xac""r""\xa1""I"
};

static const StringListProvider k1ThePoisonStringsDOSChineseTradProvider = { ARRAYSIZE(k1ThePoisonStringsDOSChineseTrad), k1ThePoisonStringsDOSChineseTrad };

static const char *const k1FluteStringsDOSChineseTrad[2] = {
	"\xc5\xa5\xb0""_""\xa8\xd3\xa4\xa3\xab\xe7\xbb\xf2\xbc\xcb\xa1""C",
	"\xb3\xcc\xab\xe1\xa4""@""\xad\xd3\xad\xb5\xb2\xc5\xaa\xba\xad\xb5\xbd\xd5\xab""D""\xb1""`""\xb0\xaa\xa1""I"
};

static const StringListProvider k1FluteStringsDOSChineseTradProvider = { ARRAYSIZE(k1FluteStringsDOSChineseTrad), k1FluteStringsDOSChineseTrad };

static const char *const k1WispJewelStringsDOSChineseTrad[3] = {
	"\xa7\xda\xc4\xb1\xb1""o""\xb2""{""\xa6""b""\xae\xc9\xbe\xf7\xa4\xa3\xa4\xd3\xb9\xef\xa1""C",
	"\xa4""]""\xb3\xa7\xda\xc0\xb3\xb8\xd3\xa5\xfd\xa9\xf1\xa4""U""\xa7\xda\xaa\xba",
	"\xa6""A""\xbb\xa1\xa1""C"
};

static const StringListProvider k1WispJewelStringsDOSChineseTradProvider = { ARRAYSIZE(k1WispJewelStringsDOSChineseTrad), k1WispJewelStringsDOSChineseTrad };

static const char *const k1MagicJewelStringsDOSChineseTrad[1] = {
	"\xb3""o""\xad\xd3\xb7""P""\xc4\xb1\xaf""u""\xa9""_""\xa9\xc7\xa1""C"
};

static const StringListProvider k1MagicJewelStringsDOSChineseTradProvider = { ARRAYSIZE(k1MagicJewelStringsDOSChineseTrad), k1MagicJewelStringsDOSChineseTrad };

static const char *const k1FlaskFullStringDOSChineseTrad[1] = {
	"\xb3""o""\xad\xd3\xb2""~""\xa4""l""\xa4""w""\xb8""g""\xb8\xcb\xba\xa1\xa4""F""\xa1""C"
};

static const StringListProvider k1FlaskFullStringDOSChineseTradProvider = { ARRAYSIZE(k1FlaskFullStringDOSChineseTrad), k1FlaskFullStringDOSChineseTrad };

static const char *const k1FullFlaskStringDOSChineseTrad[4] = {
	"\xb3""o""\xad\xd3\xb2""~""\xa4""l""\xb8\xcb\xba\xa1\xa4""F""\xb7""s""\xc2""A""\xaa\xba\xa4\xf4\xa1""A""\xa6\xd3\xa5""B""\xb0""{""\xc4\xa3\xb5\xdb\xa5\xfa\xa8""~""\xa1""C",
	"\xb3""o""\xad\xd3\xb2""~""\xa4""l""\xb8\xcb\xba\xa1\xa4""F""\xc6""Q""\xa4\xf4\xa1""C",
	"\xb3""o""\xad\xd3\xb2""~""\xa4""l""\xb8\xcb\xba\xa1\xa4""F""\xc4""q""\xac""u""\xa4\xf4\xa1""C",
	"\xc5""]""\xaa""k""\xa4\xf4\xa1""C"
};

static const StringListProvider k1FullFlaskStringDOSChineseTradProvider = { ARRAYSIZE(k1FullFlaskStringDOSChineseTrad), k1FullFlaskStringDOSChineseTrad };

static const char *const k1OutroHomeStringDOSChineseTrad[1] = {
	"\xa5\xac\xc4\xf5\xb5""n""\xae""a""\xb8\xcc"
};

static const StringListProvider k1OutroHomeStringDOSChineseTradProvider = { ARRAYSIZE(k1OutroHomeStringDOSChineseTrad), k1OutroHomeStringDOSChineseTrad };

static const char *const k1VeryCleverStringDOSChineseTrad[1] = {
	"\xab\xdc\xc1""o""\xa9\xfa\xa1""I""\xa6\xfd\xac""O""\xa7""A""\xb3""o""\xa8\xc7\xb5\xea\xae""z""\xaa\xba\xa7""V""\xa4""O""\xb3\xa3\xac""O""\xae""{""\xb3\xd2\xb5""L""\xa5\xa1""C",
};

static const StringListProvider k1VeryCleverStringDOSChineseTradProvider = { ARRAYSIZE(k1VeryCleverStringDOSChineseTrad), k1VeryCleverStringDOSChineseTrad };

static const char *const k1GUIStringsDOSChineseTrad[28] = {
	"\xb3\xcd"" ""\xc4\xf5"" ""\xad""} ""\xa8\xc8"" ""\xb6\xc7"" ""\xa9""_",
	"\xa8\xfa\xa6""^""\xb9""C""\xc0\xb8\xb6""i""\xab\xd7",
	"\xc0""x""\xa6""s""\xb9""C""\xc0\xb8\xb6""i""\xab\xd7",
	"\xbd\xd5\xbe\xe3\xb9""C""\xc0\xb8\xb0\xd1\xbc\xc6",
	"\xc2\xf7"" ""\xb6""} ""\xb9""C ""\xc0\xb8",
	"\xa6""^""\xa8\xec\xb9""C""\xc0\xb8",
	"\xbd\xd5\xbe\xe3\xb9""C""\xc0\xb8\xb0\xd1\xbc\xc6",
	"\xa8\xfa"" ""\xa6""^ ""\xb9""C ""\xc0\xb8"" ""\xb6""i ""\xab\xd7",
	"\xbf\xef"" ""\xbe\xdc"" ""\xa6""s ""\xa9\xf1"" ""\xc4\xe6"" ""\xa6\xec"" ""\xa1""G",
	"[ ""\xaa\xc5"" ""\xa5\xd5"" ""\xc4\xe6"" ""\xa6\xec"" ]",
	"\xa8\xfa"" ""\xae\xf8",
	"\xbd\xd0\xbf\xe9\xa4""J""\xa5\xd8\xab""e""\xb6""i""\xab\xd7\xaa\xba\xbb\xa1\xa9\xfa\xa1""G",
	"\xc0""x ""\xa6""s",
	"\xa6""w""\xae\xa7\xa7""a""\xa1""A""\xa5\xac\xc4\xf5\xb5""n""\xa1""I",
	"\xbd""T""\xa9""w""\xc2\xf7\xb6""}""\xb9""C""\xc0\xb8\xb6\xdc\xa1""H",
	"XXX",
	"XXX",
	"XXXXXXX",
	"XXXXXXXXX",
	"\xa6""^""\xa5""D""\xbf\xef\xb3\xe6",
	"\xa6\xb3",
	"\xb5""L",
	"\xac""O",
	"\xa7""_",
	"\xa6\xe6\xa8\xab\xb3""t""\xab\xd7",
	"\xb0""T""\xae\xa7\xb3""t""\xab\xd7",
	"\xad\xb5\xa1""@""\xa1""@""\xbc\xd6",
	"\xad\xb5\xa1""@""\xa1""@""\xae\xc4"
};

static const StringListProvider k1GUIStringsDOSChineseTradProvider = { ARRAYSIZE(k1GUIStringsDOSChineseTrad), k1GUIStringsDOSChineseTrad };

static const char *const k1NewGameStringDOSChineseTrad[1] = {
	"[ ""\xad\xab\xb7""s""\xb6""}""\xa9""l""\xb9""C""\xc0\xb8"" ]"
};

static const StringListProvider k1NewGameStringDOSChineseTradProvider = { ARRAYSIZE(k1NewGameStringDOSChineseTrad), k1NewGameStringDOSChineseTrad };

static const char *const k1ConfigStringsDOSChineseTrad[9] = {
	"\xb3\xcc\xba""C",
	" ""\xba""C ",
	"\xa5\xbf\xb1""`",
	" ""\xa7\xd6"" ",
	"\xb3\xcc\xa7\xd6",
	" ""\xb3\xcc\xba""C ",
	" ""\xa5\xbf\xb1""` ",
	"\xa1""@""\xa7\xd6\xa1""@",
	"\xa5""i""\xb1\xb1\xa8\xee"
};

static const StringListProvider k1ConfigStringsDOSChineseTradProvider = { ARRAYSIZE(k1ConfigStringsDOSChineseTrad), k1ConfigStringsDOSChineseTrad };

static const uint16 k1TwoByteFontLookupTableDOSChineseTrad[] = {
	0xcdb3, 0xf5c4, 0x7dad, 0xc8a8, 0xc7b6, 0xa1bb, 0x5fa9, 0xfaa8,
	0x5ea6, 0x43b9, 0xb8c0, 0x69b6, 0xd7ab, 0x78c0, 0x73a6, 0xd5bd,
	0xe3be, 0xd1b0, 0xc6bc, 0xf7c2, 0x7db6, 0xeca8, 0xefbf, 0xdcbe,
	0xf1a9, 0xe6c4, 0xeca6, 0x47a1, 0xabad, 0x73b7, 0x6ca9, 0xc5aa,
	0xd5a5, 0xf8ae, 0xd0bd, 0xe9bf, 0x4aa4, 0xd8a5, 0x65ab, 0xbaaa,
	0xfaa9, 0x77a6, 0xa7ae, 0x61a7, 0x41a1, 0xaca5, 0x6eb5, 0x49a1,
	0x54bd, 0x77a9, 0xdcb6, 0x48a1, 0xe6b3, 0x44a5, 0xb3a6, 0x4cb5,
	0x4fac, 0x5fa7, 0xccb3, 0x43ba, 0xbfa5, 0x60b1, 0xd6a7, 0x40a1,
	0x69a5, 0xb1b1, 0xeea8, 0xe6a6, 0xaba8, 0x74b3, 0x54b0, 0xb5ad,
	0xd6bc, 0xc4ae, 0xa5c5, 0x5fb0, 0xd3a8, 0xa3a4, 0xe7ab, 0xf2bb,
	0xcbbc, 0x43a1, 0xe1ab, 0x40a4, 0xd3ad, 0xc5b2, 0x44ab, 0xaab0,
	0x5da4, 0x5cb3, 0xdaa7, 0xb3c0, 0xd3b8, 0xfda5, 0xe2a7, 0xa6a5,
	0x55a4, 0x7bbb, 0xb0ac, 0xa5b5, 0x40c5, 0xada8, 0xecab, 0x5fb4,
	0x6baa, 0x4fa4, 0x6fb3, 0xfbc1, 0x5fc4, 0xdba5, 0xfda6, 0xc6ac,
	0xc2b6, 0xe2a6, 0xe2b6, 0x62a6, 0xfca8, 0xcbb6, 0xc9ae, 0xd4ad,
	0xdcab, 0xcea5, 0xb1c4, 0x6fb1, 0x7bb2, 0xf7be, 0xd3a4, 0xefb9,
	0x41a6, 0x43a8, 0xb8a6, 0xb2c4, 0x4eba, 0xa3b3, 0x50b7, 0x7db0,
	0xc7a9, 0xa7b2, 0xcfba, 0x75af, 0xddac, 0xfabe, 0x76a5, 0x77a4,
	0x67b8, 0x57b6, 0x4cb9, 0x64a4, 0x7ea6, 0x46a4, 0xe5c5, 0x48a4,
	0x72ac, 0xc0af, 0x68b0, 0x40bc, 0xd7b2, 0xabaf, 0xdcb8, 0x50bb,
	0x63b4, 0x5dc5, 0xc4b2, 0xa1b3, 0x5db3, 0x70ad, 0xcaba, 0x73bb,
	0xa6b5, 0x65b5, 0x7bb5, 0xa1a6, 0xdeba, 0xbba5, 0xa9aa, 0xefa9,
	0x59c0, 0xb2b5, 0xf4a7, 0xb1ad, 0xfcac, 0x75a4, 0x40a7, 0xccaa,
	0x7eab, 0xe8bd, 0xfab4, 0xd5b8, 0xb9a6, 0x53af, 0x4fa7, 0xc2c1,
	0x48a5, 0xcea4, 0x58a5, 0xf5b3, 0xabaa, 0x75a1, 0xcba7, 0xdaa6,
	0x76a1, 0xbfba, 0xb8ba, 0x46b1, 0x69ab, 0x46b9, 0xa6ae, 0x61a6,
	0x6ba4, 0xbdb2, 0x71a5, 0xdcb5, 0xe5c1, 0xf7aa, 0x4eb3, 0x68a4,
	0xc0ac, 0xe8a6, 0xa9a5, 0xe2a4, 0xaebb, 0xd2b0, 0xfea5, 0xe9c5,
	0xa1a7, 0xeab5, 0x63ba, 0x70a6, 0x58a6, 0xc2af, 0xddc4, 0x70b9,
	0x50a6, 0x76c5, 0xd2a9, 0xbda4, 0x4fab, 0x64af, 0xc1a4, 0x51a7,
	0x6fc1, 0x41a7, 0xc7a8, 0x7aae, 0x56a7, 0x7bae, 0xd2b3, 0x5ca5,
	0x61ae, 0xccb8, 0xbab4, 0xf3a7, 0x68a6, 0xe0af, 0xbaa8, 0x6ea6,
	0xdab0, 0x4aa7, 0x4ba1, 0x71b6, 0x6ab1, 0x6aa4, 0xd3ac, 0xb5af,
	0xc7be, 0x7cb7, 0xe2bb, 0xc9be, 0x7ec0, 0x51ac, 0xd1a4, 0x6bb0,
	0xe6b2, 0x4eb4, 0xbeaa, 0x44b9, 0xe4a7, 0x6ead, 0xb0bb, 0xa1b6,
	0xceb2, 0x76aa, 0xb0b3, 0xbaaf, 0x41b6, 0x47a9, 0xc0b7, 0xd1b3,
	0x53a8, 0xf9bf, 0xf8b3, 0xb3a4, 0xdcc5, 0xa8a6, 0xb3b9, 0xb4b2,
	0xfab7, 0x79ac, 0xf4a5, 0xf3a6, 0x5cb2, 0xc6a7, 0xe6b1, 0xe9ad,
	0xdcb9, 0xb5b6, 0xdba6, 0xd1a5, 0x4ca5, 0xbdb7, 0xa7a4, 0xbab3,
	0xb1b4, 0xccb2, 0xcbad, 0x4eb7, 0xecbd, 0xb4b3, 0xc0a8, 0xb2a5,
	0xb7b6, 0xc6a8, 0xb5c4, 0x69a7, 0xf5b8, 0xcab4, 0xf0be, 0x57a4,
	0xa6aa, 0x68a5, 0x72a7, 0x70a4, 0x51aa, 0xabb9, 0xa2ab, 0xfcab,
	0x53a4, 0xcab0, 0xa1ac, 0xdbb5, 0xddb7, 0xccad, 0xeab0, 0xfda4,
	0x55b8, 0xb3b7, 0xfdc5, 0xecad, 0xacaa, 0x52a9, 0x4fa5, 0xeca9,
	0x63be, 0xefac, 0xa5ae, 0xdfb3, 0xfaad, 0x5faa, 0x42aa, 0xcda4,
	0x70a9, 0xb0c0, 0x55a7, 0xb3ae, 0x6db8, 0xe1a5, 0xf3b1, 0xf5b0,
	0x7ebb, 0xc9c0, 0xe6ae, 0xb9a9, 0xe4c3, 0xcaa9, 0x6fb5, 0x49a9,
	0x6ca7, 0x49c2, 0xceb5, 0x41aa, 0x51b7, 0xcda5, 0xf8b1, 0x44b3,
	0x7eb2, 0x6ca4, 0xcbb8, 0xa1ba, 0x41c2, 0xf4a4, 0xd3a6, 0x42a5,
	0x7bb0, 0xa3c4, 0xfaa5, 0x7ea8, 0x51c6, 0x71c4, 0x75ac, 0xf0ae,
	0x77aa, 0x4db4, 0xb9b8, 0xb6ad, 0x72a6, 0x43cf, 0x68ba, 0xb5b5,
	0xb9b4, 0xc5c2, 0x70c6, 0x42bb, 0x41bb, 0xc3ac, 0x5daf, 0xf5ac,
	0xf1ba, 0xf1be, 0x56c6, 0x4ab3, 0xc0b6, 0xc9a5, 0xeab7, 0xa7b6,
	0xeba4, 0x6db1, 0x69ad, 0x4db5, 0xb4aa, 0xc0ba, 0x7bc6, 0xbbad,
	0xe1aa, 0xc8bb, 0xecb6, 0xf4b9, 0xd9a7, 0x74b8, 0x4daa, 0x47aa,
	0xf3be, 0xeab9, 0x4aad, 0xe7ae, 0xf5a4, 0xf9b2, 0xbdb3, 0xa9b0,
	0xcfa6, 0x4cbb, 0xd7a6, 0xabc4, 0xd6ae, 0xa8c4, 0xa3db, 0xa7b5,
	0x4fb0, 0x75bc, 0xf7bf, 0xd0a6, 0xf2a4, 0xadb8, 0x60dc, 0xdfbc,
	0xf3af, 0x50ac, 0x79b2, 0x77ba, 0xe8c3, 0x42a6, 0xf9a4, 0xc6b1,
	0xc3b2, 0x46a8, 0x7cba, 0x4bc5, 0x5fc6, 0xcdb0, 0x60c2, 0xc4c3,
	0xafbe, 0xefbe, 0xf7a8, 0x62b6, 0xd6a5, 0xc8af, 0x48b8, 0x43ab,
	0xf4b6, 0x61ab, 0xfaa7, 0x57a6, 0xd7aa, 0xc7ab, 0xb9c0, 0xe6a2,
	0x47ab, 0xf1a4, 0xfbb8, 0x77c5, 0xf8c2, 0xecbf, 0xf8c3, 0x65ae,
	0xf6a9, 0xe8a4, 0x79ae, 0x6fbc, 0x51bc, 0x76bc, 0x54c5, 0xd9c1,
	0xbebe, 0x51b0, 0xbdb9, 0xeba8, 0x4bba, 0xd6a4, 0x46aa, 0xa6bd,
	0x48c2, 0xf2ba, 0x4bbc, 0xb9a7, 0xd7ad, 0x61c3, 0xbcb1, 0xc2be,
	0x67ae, 0x4dbc, 0x7ea4, 0xa1b1, 0x56b6, 0xb2c2, 0xbdaa, 0xb2b4,
	0xe4b6, 0x6ec1, 0xecaa, 0xcbb4, 0x4caa, 0xa4a4, 0xe4a8, 0xdea9,
	0xc6c0, 0xc3a5, 0xb7bb, 0xb4b5, 0x71b1, 0xd8ab, 0x76bf, 0xb0ab,
	0xf9b3, 0x55c6, 0xa7a7, 0x5bc6, 0xb3a9, 0xdbb0, 0x71ba, 0xb5b0,
	0xa6bc, 0x4bb1, 0xc9bc, 0xb7ad, 0x42ab, 0xa4b1, 0xd0a9, 0xcea9,
	0xe5c2, 0x6fa6, 0x74b7, 0xfeaa, 0xf1aa, 0xd3b0, 0x52b6, 0xf9c2,
	0xfbc4, 0xf4be, 0xd9bc, 0xe1b3, 0x75ab, 0x56c1, 0x7cbf, 0xb9b5,
	0xf6c3, 0x59ab, 0x5db8, 0xddab, 0x5ba4, 0xedb7, 0x5eb1, 0xf7b0,
	0xd8ba, 0xa3a8, 0xdfa4, 0xceba, 0x47a7, 0xb4b7, 0xc2c2, 0xeca4,
	0x4faa, 0xabb4, 0xeda6, 0xc7b7, 0xc6b3, 0xb7c3, 0x4da9, 0xddb0,
	0x44c3, 0x4da4, 0xceb3, 0xdfb0, 0x74ba, 0xb5ab, 0xb9be, 0xe5be,
	0xb5b1, 0x5fab, 0x49c0, 0xd9b6, 0x75a5, 0xc1af, 0x48c0, 0x5fc2,
	0x40ae, 0xf0bf, 0x77b6, 0x48ab, 0x74ad, 0x64b3, 0x7ab2, 0xdca6,
	0xb8af, 0xc7ae, 0x4ba7, 0x4cba, 0xc2b3, 0xd0b7, 0xe3a8, 0xc2b2,
	0x7aab, 0xf6bc, 0x51b3, 0x4eaf, 0xafaa, 0x55bf, 0x4ebf, 0x61c4,
	0x56b1, 0x44bb, 0xfda8, 0x71c1, 0xedae, 0x7eb3, 0xb1b3, 0xe9bc,
	0xc3b7, 0x71b3, 0x59ac, 0xdea5, 0x66a4, 0x5aa9, 0x66ac, 0xb5b4,
	0xe3c5, 0xddbb, 0xe4a4, 0xf9aa, 0xb4a5, 0xfdb6, 0xa1b4, 0x60b2,
	0x57b2, 0x6eab, 0xd4a9, 0xa8b0, 0xaea8, 0x57bf, 0xa4a8, 0x7ec3,
	0x41be, 0x5cc2, 0xc3a8, 0xe3bc, 0xf1b8, 0x7ea5, 0xfca6, 0x47a5,
	0xb7b5, 0x40b2, 0xa4a7, 0xf0a5, 0xada6, 0xd3b4, 0xe8ae, 0xc0c0,
	0xe9c4, 0xcea7, 0xa8a5, 0xceaa, 0xc6ae, 0x58b4, 0x59a6, 0xb9ad,
	0xeaa9, 0x70ba, 0xdaae, 0xf4bf, 0xc1ae, 0x6abe, 0xfead, 0xdabe,
	0xc1a5, 0x55a5, 0xa8a1, 0xc6a4, 0x5cac, 0xbaa6, 0xedaa, 0xdca5,
	0x45bf, 0xd1bd, 0xfec3, 0xcca8, 0xc0b1, 0x5da6, 0xa7c2, 0xbbaf,
	0xbda5, 0x79ab, 0xf3bb, 0x76a4, 0x69bc, 0x71b8, 0xc8b0, 0xb6a4,
	0x42b3, 0xdea4, 0x50c5, 0xe9b6, 0x4fa9, 0xe8ad, 0x55a9, 0xa3a7,
	0xc0c3, 0xa6b2, 0xacaf, 0x42b9, 0xf5ab, 0xe4ab, 0xb3c4, 0xefaa,
	0xb1aa, 0xb8b0, 0x4aac, 0x71ae, 0xe2a8, 0x57b3, 0x68ab, 0x6ea7,
	0x61be, 0xb1bf, 0xc8b5, 0x40ad, 0xb1b0, 0xeea4, 0xa7aa, 0xc0b4,
	0xdbac, 0x6bc2, 0xebab, 0xb1ae, 0xf3ab, 0xd3bc, 0xe8b1, 0xbcbf,
	0x70ab, 0xcaab, 0x49a5, 0x5ead, 0xafb6, 0xa5a8, 0xc3b6, 0x79bb,
	0x44b6, 0xeaa7, 0xc6b0, 0x77bc, 0x56ab, 0x64b0, 0x60aa, 0xa2a5,
	0xafa9, 0xbeb0, 0xa3b0, 0x47ac, 0xceb9, 0xedb0, 0x77b5, 0xc0be,
	0xa5a9, 0xf0c0, 0xc0a6, 0xdfb1, 0xb5b7, 0xfac4, 0xebc0, 0xa1b5,
	0xe1a4, 0xc0a5, 0xcbbf, 0xc3b3, 0xeba5, 0xacab, 0xd0bc, 0x78bb,
	0x7cb0, 0xc9b4, 0x54ad, 0xceab, 0xbbb3, 0xefb0, 0x5da1, 0x5ea1,
	0x52c4, 0x72c2, 0x6cb0, 0xc6c4, 0x42af, 0x5ea5, 0xa3a6, 0xd2bc,
	0x5db6, 0x47ba, 0xbcc5, 0xf6b1, 0x4baa, 0x53a5, 0xcca7, 0x4da8,
	0xabb0, 0x79c1, 0xe1b2, 0xbbae, 0x67b0, 0xc3c2, 0xada5, 0xfbae,
	0xc8ad, 0x68c3, 0xc3ba, 0xc4ab, 0x78af, 0xb5c0, 0x44a8, 0xf3a5,
	0xe7a6, 0xaaaf, 0xf7a4, 0xb4c2, 0xd1a6, 0xf3a9, 0xd5ab, 0x71c0,
	0xdeb7, 0x56b2, 0x62b1, 0xb3b5, 0xa5b7, 0xf1c2, 0xeac2, 0xd4b9,
	0x54a4, 0xb6b6, 0xc7a7, 0x51a6, 0x4cbd, 0xaca8, 0xd2b1, 0x5dac,
	0x4ea1, 0xf1bd, 0xe8c1, 0x73b3, 0xd6bd, 0x6faa, 0x4fbf, 0x64bb,
	0xe9e3, 0xf4b8, 0xdfae, 0x63bd, 0xd6ac, 0xb5a4, 0xbfc0, 0xb0ae,
	0xf9ab, 0xb8ad, 0xbfb8, 0xcfb1, 0x49b8, 0xf2b8, 0x5dae, 0x74a5,
	0x4ea5, 0xcdbd, 0x4da6, 0xd1aa, 0xb8a8, 0xc9ac, 0xc5bf, 0xcfa8,
	0xdca7, 0x5da5, 0xbea8, 0xc3bd, 0x48b6, 0x78bc, 0xf9ac, 0xc8ae,
	0x67a4, 0xa7b7, 0xf6bd, 0xc9a7, 0xbeb2, 0xf8b7, 0xd1ae, 0x79c4,
	0xbaa4, 0x61b1, 0x4db2, 0x4fc2, 0x78ab, 0x7dac, 0x69bf, 0x59b4,
	0x53b7, 0xaca6, 0xb0b6, 0x67a8, 0xf8aa, 0xabbc, 0xe3ab, 0xf8c0,
	0xe0a8, 0xf6ae, 0x4fb6, 0x56a6, 0xbdb5, 0x5ba5, 0xc2ab, 0x47b7,
	0xc4c2, 0x59b5, 0x76af, 0xa8aa, 0x71b7, 0xb7a6, 0x58bc, 0xd3b9,
	0x6fab, 0x68bc, 0x47a4, 0xa1a5, 0xe0ae, 0x69b1, 0xf7a5, 0x75bd,
	0x71ac, 0xd1b8, 0x5cbe, 0xaac5, 0x52ba, 0xfdaa, 0xbbc0, 0xd1b1,
	0x49ac, 0x69ae, 0xd0a1, 0xc0a4, 0xc1c4, 0x70aa, 0xe8a8, 0xd6be,
	0x5aa4, 0xd4c2, 0x56b7, 0x52bb, 0x6aa5, 0x6cc4, 0xf0b7, 0xbbaa,
	0xbdae, 0xdab4, 0xc6b7, 0xceb4, 0xeabb, 0x70bc, 0xc7a6, 0xd0b9,
	0xdcb3, 0xc6ba, 0x49b4, 0xfabf, 0xe5b4, 0x61aa, 0xfcae, 0x79c5,
	0x49a8, 0xacc0, 0x74ae, 0xd4a7, 0xb2ba, 0xe1ad, 0x65aa, 0xa1b7,
	0xe6a5, 0xaba7, 0xc4a5, 0x47b8, 0x6bbd, 0xb2b0, 0xe2ba, 0x51b6,
	0x5db0, 0xa3b2, 0x6db7, 0x66b7, 0x74b0, 0x66b0, 0xe0c2, 0x5ab3,
	0x5abd, 0xa3c0, 0x62a5, 0x40a5, 0xfae4, 0x5da7, 0x51af, 0x74c0,
	0xf2c0, 0xe4c1, 0xf3a8, 0x57a5, 0xd2a6, 0xb3bf, 0x44a1, 0xeeaf,
	0xd5c2, 0x79b3, 0x5ea9, 0x78b4, 0xc1a6, 0x52b7, 0xe9ac, 0x4ba6,
	0xd3b3, 0xd3b7, 0x5ec6, 0x4fb4, 0xf4bc, 0x75c0, 0x68b5, 0x65b0,
	0xe7c1, 0x4eb5, 0x7eac, 0xd7bf, 0xc9ba, 0xfbac, 0xdeb8, 0x71c2,
	0x61ad, 0x5eba, 0x5aa6, 0xfeb1, 0x60ae, 0xbfb4, 0x78a7, 0xa3bf,
	0xa1a4, 0xa8b8, 0xe5a6, 0x40bf, 0xf6b4, 0x43c3, 0xf7a7, 0xd5b2,
	0xfcad, 0x62a7, 0x53bf, 0xe7c5, 0x72ab, 0xaab2, 0x46b7, 0x47bb,
	0xeac4, 0x68ac, 0x78c3, 0x63aa, 0x47b2, 0xbeb3, 0xa6b0, 0xcdaf,
	0x48bb, 0xe9a7, 0x5fb1, 0xefbb, 0xc3b9, 0x74a7, 0x7ebc, 0xe9a4,
	0xd8a4, 0x75a9, 0x60b8, 0xf6ab, 0x4cae, 0xf4bb, 0xd1a7, 0x4db1,
	0x67bc, 0xbcc1, 0x6aa7, 0xd4ae, 0xe6b7, 0x79a6, 0x55be, 0xe3ac,
	0x73a8, 0xefa7, 0x68b7, 0xccbd, 0x63ae, 0xc8a9, 0xa5b3, 0xb4bb,
	0x50be, 0xc5a8, 0x54b9, 0xeeb6, 0xcfa4, 0xd0b3, 0x46c6, 0x73c0,
	0xfaa4, 0xa6be, 0xeaa8, 0xaeb0, 0x62b2, 0xdfbf, 0x4dc3, 0xbda6,
	0xd9a6, 0xfac1, 0x42a8, 0x52a5, 0x4ba8, 0xb4a7, 0x43a6, 0xc9c1,
	0xf6ac, 0xc0a9, 0x49ad, 0x78ad, 0xabba, 0xe2b0, 0xcfb4, 0x4ac0,
	0xd1ad, 0xcebc, 0x71aa, 0xe0b3, 0xbec2, 0x7eb7, 0xc1b3, 0xb0b5,
	0x56bf, 0xbba7, 0xb6b0, 0x4fbb, 0x55b4, 0xaba4, 0xb1c3, 0x59aa,
	0x61ba, 0xb7b0, 0x64b1, 0xc7af, 0x60c1, 0xb4a4, 0xacc3, 0xe2ae,
	0xfebe, 0x73a7, 0xc8b4, 0xfba6, 0xcab6, 0xc9ad, 0x68ae, 0x5cb0,
	0xa8b3, 0x60ad, 0xb6bd, 0xd0dc, 0xe4bc, 0xc5b7, 0x78b7, 0xf4ab,
	0x58b3, 0xe5a4, 0x54aa, 0x57bc, 0x5fbe, 0x50ad, 0xb6ba, 0xa7b4,
	0xf9bb, 0x63a5, 0xcec2, 0xaea7, 0x6fc4, 0xeab6, 0xcaa5, 0xc7a4,
	0x79b5, 0x4cb7, 0xcfb9, 0x79b9, 0xbab6, 0x6db5, 0x7ba8, 0x7dba,
	0x7db5, 0x7daf, 0x7db8, 0xaea1, 0xbab9, 0xd7a1, 0x7bc1, 0x4bb1,
	0x69aa, 0xbdc2, 0xadad, 0x4ca6, 0x7dab, 0xb2a2
};

static const Uint16Provider k1TwoByteFontLookupTableDOSChineseTradProvider = { ARRAYSIZE(k1TwoByteFontLookupTableDOSChineseTrad), k1TwoByteFontLookupTableDOSChineseTrad };

static const uint8 k1CreditsStringsDOSChineseTrad[] = {
	0x0d, 0xbc, 0x40, 0xa1, 0x40, 0xa1, 0x40, 0xa1,
	0x40, 0xb2, 0xd7, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d,
	0x0d, 0x0d, 0x0d, 0xaf, 0xab, 0xa1, 0x40, 0xb8,
	0xdc, 0xa1, 0x40, 0xbb, 0x50, 0xa1, 0x40, 0xb4,
	0x63, 0xa1, 0x40, 0xc5, 0x5d, 0x0d, 0xb2, 0xc4,
	0xa4, 0x40, 0xb3, 0xa1, 0x0d, 0xb3, 0xcd, 0xc4,
	0xf5, 0xad, 0x7d, 0xa8, 0xc8, 0xb6, 0xc7, 0xa9,
	0x5f, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d,
	0xb9, 0x43, 0xc0, 0xb8, 0xb3, 0x5d, 0xad, 0x70,
	0x0d, 0x57, 0x65, 0x73, 0x74, 0x77, 0x6f, 0x6f,
	0x64, 0x20, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d,
	0xba, 0xca, 0xa1, 0x40, 0xbb, 0x73, 0x0d, 0x42,
	0x72, 0x65, 0x74, 0x74, 0x20, 0x57, 0x2e, 0x20,
	0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0d, 0x0d,
	0xb5, 0xa6, 0xa1, 0x40, 0xb9, 0xba, 0x0d, 0x4d,
	0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c,
	0x65, 0x67, 0x67, 0x0d, 0x52, 0x69, 0x63, 0x6b,
	0x20, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x0d, 0x50,
	0x61, 0x75, 0x6c, 0x20, 0x53, 0x2e, 0x20, 0x4d,
	0x75, 0x64, 0x72, 0x61, 0x0d, 0x0d, 0xb5, 0x7b,
	0xa6, 0xa1, 0xa5, 0x44, 0xba, 0xde, 0x0d, 0x4d,
	0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c,
	0x65, 0x67, 0x67, 0x0d, 0x0d, 0xb9, 0x43, 0xc0,
	0xb8, 0xbc, 0x40, 0xa5, 0xbb, 0x0d, 0x53, 0x63,
	0x6f, 0x74, 0x74, 0x20, 0x42, 0x6f, 0x77, 0x65,
	0x6e, 0x0d, 0x0d, 0x41, 0x6d, 0x69, 0x67, 0x61,
	0x20, 0xaa, 0xa9, 0xb5, 0x7b, 0xa6, 0xa1, 0xb3,
	0x5d, 0xad, 0x70, 0x0d, 0x42, 0x69, 0x6c, 0x6c,
	0x20, 0x53, 0x74, 0x6f, 0x6b, 0x65, 0x73, 0x0d,
	0x0d, 0xa4, 0xf9, 0xc0, 0x59, 0xbb, 0x50, 0xb5,
	0xb2, 0xa7, 0xf4, 0xb5, 0x65, 0xad, 0xb1, 0x0d,
	0x43, 0x68, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x70,
	0x68, 0x65, 0x72, 0x20, 0x59, 0x61, 0x74, 0x65,
	0x73, 0x0d, 0x0d, 0xac, 0xfc, 0xa1, 0x40, 0xa4,
	0x75, 0x0d, 0x52, 0x69, 0x63, 0x6b, 0x20, 0x50,
	0x61, 0x72, 0x6b, 0x73, 0x0d, 0x52, 0x65, 0x6e,
	0x20, 0x4f, 0x6c, 0x73, 0x65, 0x6e, 0x0d, 0x4c,
	0x6f, 0x75, 0x69, 0x73, 0x65, 0x20, 0x53, 0x61,
	0x6e, 0x64, 0x6f, 0x76, 0x61, 0x6c, 0x0d, 0x4a,
	0x6f, 0x73, 0x65, 0x70, 0x68, 0x20, 0x48, 0x65,
	0x77, 0x69, 0x74, 0x74, 0x20, 0x49, 0x56, 0x0d,
	0x4a, 0x75, 0x64, 0x69, 0x74, 0x68, 0x20, 0x50,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x0d,
	0x41, 0x61, 0x72, 0x6f, 0x6e, 0x20, 0x50, 0x6f,
	0x77, 0x65, 0x6c, 0x6c, 0x0d, 0x45, 0x6c, 0x69,
	0x65, 0x20, 0x41, 0x72, 0x61, 0x62, 0x69, 0x61,
	0x6e, 0x0d, 0x45, 0x72, 0x69, 0x63, 0x20, 0x53,
	0x68, 0x75, 0x6c, 0x74, 0x73, 0x0d, 0x0d, 0xad,
	0xb5, 0xae, 0xc4, 0xa5, 0x44, 0xba, 0xde, 0x0d,
	0x50, 0x61, 0x75, 0x6c, 0x20, 0x53, 0x2e, 0x20,
	0x4d, 0x75, 0x64, 0x72, 0x61, 0x0d, 0x0d, 0xad,
	0xb5, 0xbc, 0xd6, 0xbb, 0x73, 0xa7, 0x40, 0x0d,
	0x46, 0x72, 0x61, 0x6e, 0x6b, 0x20, 0x4b, 0x6c,
	0x65, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x0d, 0x0d,
	0xad, 0xb5, 0xae, 0xc4, 0xbb, 0x73, 0xa7, 0x40,
	0x0d, 0x44, 0x77, 0x69, 0x67, 0x68, 0x74, 0x20,
	0x4f, 0x6b, 0x61, 0x68, 0x61, 0x72, 0x61, 0x0d,
	0x0d, 0xa7, 0x40, 0xa1, 0x40, 0xaa, 0xcc, 0x0d,
	0x22, 0x43, 0x6f, 0x63, 0x6f, 0x22, 0x0d, 0x0d,
	0xab, 0x7e, 0xbd, 0xe8, 0xb4, 0xfa, 0xb8, 0xd5,
	0x0d, 0x47, 0x6c, 0x65, 0x6e, 0x6e, 0x20, 0x53,
	0x70, 0x65, 0x72, 0x72, 0x79, 0x0d, 0x4d, 0x61,
	0x74, 0x74, 0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x73, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x20,
	0x46, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x0d, 0x4d,
	0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x72, 0x0d,
	0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20,
	0x47, 0x61, 0x74, 0x65, 0x72, 0x0d, 0x45, 0x75,
	0x67, 0x65, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x0d, 0x4d, 0x69, 0x63, 0x68,
	0x61, 0x65, 0x6c, 0x20, 0x47, 0x6c, 0x6f, 0x73,
	0x65, 0x63, 0x6b, 0x69, 0x0d, 0x4a, 0x75, 0x73,
	0x74, 0x69, 0x6e, 0x20, 0x4e, 0x6f, 0x72, 0x72,
	0x0d, 0x54, 0x6f, 0x70, 0x20, 0x53, 0x74, 0x61,
	0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x20, 0x31, 0x2c, 0x32, 0x2c, 0x33, 0x0d,
	0x0d, 0x0d, 0x0d, 0x0d, 0xa6, 0x62, 0xa6, 0xb9,
	0xaf, 0x53, 0xa7, 0x4f, 0xb7, 0x50, 0xc1, 0xc2,
	0x0d, 0x4c, 0x79, 0x6c, 0x65, 0x20, 0x4a, 0x2e,
	0x20, 0x48, 0x61, 0x6c, 0x6c, 0x0d, 0x44, 0x61,
	0x76, 0x69, 0x64, 0x20, 0x42, 0x69, 0x73, 0x68,
	0x6f, 0x70, 0x0d, 0x22, 0x54, 0x68, 0x65, 0x20,
	0x44, 0x6f, 0x63, 0x22, 0x0d, 0xa1, 0xae, 0x0d,
	0x46, 0x69, 0x72, 0x65, 0x62, 0x65, 0x72, 0x72,
	0x79, 0x20, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x0d,
	0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0xa5, 0x58,
	0xb3, 0xf5, 0xa4, 0x48, 0xaa, 0xab, 0x0d, 0x0d,
	0xa1, 0x75, 0xa7, 0xcb, 0xa1, 0x40, 0xa6, 0xda,
	0xa1, 0x76, 0xa1, 0x40, 0xba, 0xbf, 0xba, 0xb8,
	0xb1, 0x46, 0x0d, 0xa1, 0x75, 0xab, 0x69, 0xa1,
	0x40, 0xaa, 0xcc, 0xa1, 0x76, 0xa1, 0x40, 0xa5,
	0xac, 0xc4, 0xf5, 0xb5, 0x6e, 0x0d, 0xa1, 0x40,
	0xb9, 0x46, 0xae, 0xa6, 0xa1, 0x40, 0xa1, 0xae,
	0xa1, 0x40, 0xa5, 0xd5, 0xc4, 0xf5, 0xa6, 0x61,
	0x0d, 0xa1, 0x75, 0xa4, 0x6b, 0xb2, 0xbd, 0xa5,
	0x71, 0xa1, 0x76, 0xa1, 0x40, 0xa5, 0xac, 0xb5,
	0xdc, 0xae, 0xa6, 0x0d, 0xa1, 0x75, 0xc1, 0xe5,
	0xaa, 0xf7, 0xb3, 0x4e, 0xa4, 0x68, 0xa1, 0x76,
	0xac, 0xc0, 0xa6, 0xe8, 0xa8, 0xc8, 0x0d, 0xa1,
	0x75, 0xa5, 0xa9, 0xa1, 0x40, 0xa4, 0xe2, 0xa1,
	0x76, 0xa1, 0x40, 0xbb, 0xae, 0xa1, 0x40, 0xb0,
	0xd2, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d,
	0xa5, 0xbb, 0xc0, 0xb8, 0xa5, 0xfe, 0xc5, 0xe9,
	0xa5, 0x58, 0xb3, 0xf5, 0xa4, 0x48, 0xaa, 0xab,
	0x0d, 0xa7, 0xa1, 0xac, 0xb0, 0xb5, 0xea, 0xba,
	0x63, 0x0d, 0xa6, 0x70, 0xa6, 0xb3, 0xb9, 0x70,
	0xa6, 0x50, 0xa1, 0x40, 0xaf, 0xc2, 0xc4, 0xdd,
	0xa5, 0xa9, 0xa6, 0x58, 0x0d, 0x0d, 0x0d, 0x0d,
	0x0d, 0x0d, 0xa4, 0xa4, 0xa4, 0xe5, 0xaa, 0xa9,
	0x0d, 0xb2, 0xc4, 0xa1, 0x40, 0xa1, 0x40, 0xa2,
	0xb2, 0xa1, 0x40, 0xa1, 0x40, 0xaa, 0x69, 0x0d,
	0xa4, 0xe5, 0xa4, 0xc6, 0xa8, 0xc6, 0xb7, 0x7e,
	0xaa, 0xd1, 0xa5, 0xf7, 0xa6, 0xb3, 0xad, 0xad,
	0xa4, 0xbd, 0xa5, 0x71, 0x0d, 0x0d, 0x0d, 0x0d,
	0x0d, 0x0d, 0x0d, 0x0d, 0xaa, 0xa9, 0xc5, 0x76,
	0xa9, 0xd2, 0xa6, 0xb3, 0xa1, 0x40, 0xc2, 0xbd,
	0xa6, 0x4c, 0xa5, 0xb2, 0xa8, 0x73, 0x0d, 0x28,
	0x43, 0x29, 0x31, 0x39, 0x39, 0x32, 0x2c, 0x20,
	0x57, 0x65, 0x73, 0x74, 0x77, 0x6f, 0x6f, 0x64,
	0x20, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x2c, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x0d, 0x0d,
	0x0d, 0x0d, 0x00
};

static const ByteProvider k1CreditsStringsDOSChineseTradProvider = { ARRAYSIZE(k1CreditsStringsDOSChineseTrad), k1CreditsStringsDOSChineseTrad };
