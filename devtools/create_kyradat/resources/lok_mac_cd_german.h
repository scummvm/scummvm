static const char *const k1IntroStringsMacCDGerman[51] = {
	"This is a text test - 1",
	"This is a text test - 2",
	"Sei gegr""\x81\xE1""t, Kallak...",
	"...M""\x84""chtiger Anf""\x81""hrer der k""\x94""niglichen Mystiker!",
	"Habe ich dich erschreckt?",
	"Malcolm!",
	"Ich habe gestern von deiner Flucht geh""\x94""rt.",
	"Ich habe dich fr""\x81""her erwartet.",
	"Warum sollte ich mich beeilen?",
	"Ich herrsche ""\x81""ber dieses Land!",
	"Dein mickriger Fluch h""\x84""lt mich nicht zur""\x81""ck.",
	"So, erschlag mich doch!",
	"Ich habe nur noch wenig Magie ""\x81""brig.",
	"Ich werde dir zu Leibe r""\x81""cken, zweifle blo""\xE1"" nicht daran...",
	"...du bist jetzt aus Stein...",
	"...Ich lasse dir allein deine Augen.",
	"F""\x81""r Kyrandia vergie""\xE1""e ich nicht eine Tr""\x84""ne...",
	"...aber deine will ich dir nicht nehmen.",
	"Malcolm der Hofnarr ist ausgebrochen!",
	"Er beherrscht nun den Kyragem...",
	"...die Quelle aller Magie in Kyrandia!",
	"",
	"Wie kannst du es wagen, MICH umzuwerfen!",
	"Nicht doch, etwas Besonderes f""\x81""r dich...",
	"Was f""\x81""r ein l""\x84""cherlicher Fluch!",
	"Ich warne dich vorher.",
	"Springe nicht auf DIESEN Baum!",
	"Klettre nicht auf diesen Baum, kleines Eichh""\x94""rnchen!",
	"Buuh!",
	"So ist es viel lustiger...",
	"...nicht wahr?",
	"Ha ha ha...",
	"Sind Finger nicht 'was Tolles?",
	"Es ist gro""\xE1""artig, am Leben zu sein!",
	"Brandon!",
	"Gro""\xE1""vater! Wir haben es geschafft!",
	"Nein! DU hast es geschafft!",
	"Lang lebe K""\x94""nig Brandon!",
	"Lang leben die k""\x94""niglichen Mystiker!",
	"Bauen wir Kyrandia wieder auf!",
	"Eine gute Idee!",
	"Als meine erste k""\x94""nigliche Proklamation,...",
	"...erkl""\x84""re ich Sandalen zur offiziellen Fu""\xE1""bekleidung Kyrandias!",
	"Sehr weise, Brandon!",
	"Das Land ist nicht l""\x84""nger in Trauer!",
	"Und deine Freunde sind gerettet.",
	"Liebe Brynn...",
	"Malcolm ist ausgebrochen!",
	"Er wird bald zu mir kommen.",
	"Bitte hilf Brandon...",
	""
};

static const StringListProvider k1IntroStringsMacCDGermanProvider = { ARRAYSIZE(k1IntroStringsMacCDGerman), k1IntroStringsMacCDGerman };

static const char *const k1ItemNamesMacCDGerman[108] = {
	"Granat",
	"Amethyst",
	"Aquamarin",
	"Diamant",
	"Smaragd",
	"Perle",
	"Rubin",
	"Peridot",
	"Saphir",
	"Opal",
	"Topas",
	"Onyx",
	"Sonnenstein",
	"Mondstein",
	"Regenbogenstein",
	"Magnetstein",
	"Rose",
	"Tulpe",
	"Orchidee",
	"Silberne Rose",
	"Silberne Statuette",
	"Silberm""\x81""nze",
	"Goldm""\x81""nze",
	"Goldring",
	"Der Kelch des K""\x94""nigs",
	"Kienapfel",
	"Eichel",
	"Walnu""\xE1",
	"Immerleuchtende Feuerbeeren",
	"Feuerbeeren",
	"Feuerbeeren",
	"Feuerbeeren",
	"Feuerbeeren",
	"Feuerbeeren",
	"Fisch",
	"Fischgr""\x84""te",
	"Hammelkeule",
	"Knochen",
	"Apfel",
	"Apfelgriebsch",
	"Heidelbeeren",
	"Pilz",
	"Notiz",
	"Murmel",
	"S""\x84""ge",
	"Henkelkreuz",
	"Feder",
	"Ei",
	"Blatt",
	"Kleeblatt",
	"Sternschnuppe",
	"Kristallkugel",
	"Tr""\x84""ne",
	"Spiegel",
	"Eisst""\x81""ck",
	"Fl""\x94""te",
	"Sanduhr",
	"Eisenschl""\x81""ssel",
	"Jadeschl""\x81""ssel",
	"Obsidianschl""\x81""ssel",
	"Roter Trank",
	"Roter Trank",
	"Blauer Trank",
	"Blauer Trank",
	"Gelber Trank",
	"Gelber Trank",
	"Gr""\x81""ner Trank",
	"Oranger Trank",
	"Violetter Trank",
	"Regenbogentrank",
	"S""\x81\xE1""wasser",
	"S""\x81\xE1""wasser",
	"Salzwasser",
	"Salzwasser",
	"Mineralwasser",
	"Mineralwasser",
	"Magisches Wasser",
	"Magisches Wasser",
	"Leere Flasche",
	"Leere Flasche",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Schriftrolle",
	"Pergamentfetzen",
	"Pergamentfetzen",
	"Pergamentfetzen",
	"Pergamentfetzen",
	"Pergamentfetzen",
	"Roter Weisenstein",
	"Oranger Weisenstein",
	"Gelber Weisenstein",
	"Gr""\x81""ner Weisenstein",
	"T""\x81""rkiser Weisenstein",
	"Blauer Weisenstein",
	"Violetter Weisenstein",
	"Schwerer Stein",
	"K""\x94""nigliche Krone",
	"K""\x94""nigliches Zepter",
	"Goldschl""\x81""ssel",
	"Unbekannter Gegenstand",
	""
};

static const StringListProvider k1ItemNamesMacCDGermanProvider = { ARRAYSIZE(k1ItemNamesMacCDGerman), k1ItemNamesMacCDGerman };

static const char *const k1TakenStringsMacCDGerman[2] = {
	" aufgenommen.",
	" aufgenommen."
};

static const StringListProvider k1TakenStringsMacCDGermanProvider = { ARRAYSIZE(k1TakenStringsMacCDGerman), k1TakenStringsMacCDGerman };

static const char *const k1PlacedStringsMacCDGerman[1] = {
	" abgelegt."
};

static const StringListProvider k1PlacedStringsMacCDGermanProvider = { ARRAYSIZE(k1PlacedStringsMacCDGerman), k1PlacedStringsMacCDGerman };

static const char *const k1DroppedStringsMacCDGerman[1] = {
	" fallengelassen."
};

static const StringListProvider k1DroppedStringsMacCDGermanProvider = { ARRAYSIZE(k1DroppedStringsMacCDGerman), k1DroppedStringsMacCDGerman };

static const char *const k1NoDropStringsMacCDGerman[2] = {
	"Hier kann nichts mehr abgelegt werden.",
	"Das kann hier nicht abgelegt werden."
};

static const StringListProvider k1NoDropStringsMacCDGermanProvider = { ARRAYSIZE(k1NoDropStringsMacCDGerman), k1NoDropStringsMacCDGerman };

static const char *const k1PutDownStringMacCDGerman[1] = {
	"Vielleicht sollte ich es erst hinlegen."
};

static const StringListProvider k1PutDownStringMacCDGermanProvider = { ARRAYSIZE(k1PutDownStringMacCDGerman), k1PutDownStringMacCDGerman };

static const char *const k1WaitAmuletStringMacCDGerman[1] = {
	"I nehme an, ich mu""\xE1"" warten, bis mein Amulett seine Kraft wiedererlangt."
};

static const StringListProvider k1WaitAmuletStringMacCDGermanProvider = { ARRAYSIZE(k1WaitAmuletStringMacCDGerman), k1WaitAmuletStringMacCDGerman };

static const char *const k1BlackJewelStringMacCDGerman[1] = {
	"Es ist ein Edelstein, aber warum ist er schwarz?"
};

static const StringListProvider k1BlackJewelStringMacCDGermanProvider = { ARRAYSIZE(k1BlackJewelStringMacCDGerman), k1BlackJewelStringMacCDGerman };

static const char *const k1HealingTipStringMacCDGerman[1] = {
	"Mann, das kann ganz n""\x81""tzlich sein, falls ich mich verletze!"
};

static const StringListProvider k1HealingTipStringMacCDGermanProvider = { ARRAYSIZE(k1HealingTipStringMacCDGerman), k1HealingTipStringMacCDGerman };

static const char *const k1PoisonGoneStringMacCDGerman[2] = {
	"Erstaunlich!",
	"Die Wirkung des Giftes hat nachgelassen!"
};

static const StringListProvider k1PoisonGoneStringMacCDGermanProvider = { ARRAYSIZE(k1PoisonGoneStringMacCDGerman), k1PoisonGoneStringMacCDGerman };

static const char *const k1ThePoisonStringsMacCDGerman[4] = {
	"Das Gift...",
	"Ich kann nicht atmen...",
	"Ich f""\x81""hle mich nicht besonders wohl...",
	"Die Schlange mu""\xE1"" \rgiftig gewesen sein!"
};

static const StringListProvider k1ThePoisonStringsMacCDGermanProvider = { ARRAYSIZE(k1ThePoisonStringsMacCDGerman), k1ThePoisonStringsMacCDGerman };

static const char *const k1FluteStringsMacCDGerman[2] = {
	"Klingt nicht besonders beeindruckend.",
	"Die letzte Note war hoch!"
};

static const StringListProvider k1FluteStringsMacCDGermanProvider = { ARRAYSIZE(k1FluteStringsMacCDGerman), k1FluteStringsMacCDGerman };

static const char *const k1WispJewelStringsMacCDGerman[3] = {
	"Im Moment f""\x81""hle ich mich dazu nicht in der Lage.",
	"Ich mu""\xE1"" wahrscheinlich erst mein(e)...",
	"ablegen."
};

static const StringListProvider k1WispJewelStringsMacCDGermanProvider = { ARRAYSIZE(k1WispJewelStringsMacCDGerman), k1WispJewelStringsMacCDGerman };

static const char *const k1MagicJewelStringsMacCDGerman[1] = {
	"Das war eigenartig."
};

static const StringListProvider k1MagicJewelStringsMacCDGermanProvider = { ARRAYSIZE(k1MagicJewelStringsMacCDGerman), k1MagicJewelStringsMacCDGerman };

static const char *const k1FlaskFullStringMacCDGerman[1] = {
	"Die Flasche ist bereits voll."
};

static const StringListProvider k1FlaskFullStringMacCDGermanProvider = { ARRAYSIZE(k1FlaskFullStringMacCDGerman), k1FlaskFullStringMacCDGerman };

static const char *const k1FullFlaskStringMacCDGerman[4] = {
	"Die Flasche ist jetzt mit \rfrischem, klarem Wasser gef""\x81""llt.",
	"Die Flasche ist jetzt mit \rSalzwasser gef""\x81""llt.",
	"Die Flasche ist jetzt mit \rMineralwasser gef""\x81""llt.",
	"Magisches Wasser."
};

static const StringListProvider k1FullFlaskStringMacCDGermanProvider = { ARRAYSIZE(k1FullFlaskStringMacCDGerman), k1FullFlaskStringMacCDGerman };

static const char *const k1OutroHomeStringMacCDGerman[1] = {
	"Ab nach Hause"
};

static const StringListProvider k1OutroHomeStringMacCDGermanProvider = { ARRAYSIZE(k1OutroHomeStringMacCDGerman), k1OutroHomeStringMacCDGerman };

static const char *const k1VeryCleverStringMacCDGerman[1] = {
	"Sehr clever! Aber nichtige Versuche sind zum Scheitern verurteilt."
};

static const StringListProvider k1VeryCleverStringMacCDGermanProvider = { ARRAYSIZE(k1VeryCleverStringMacCDGerman), k1VeryCleverStringMacCDGerman };

static const char *const k1GUIStringsMacCDGerman[59] = {
	"Die Legende von Kyrandia",
	"Ein Spiel laden",
	"Dieses Spiel sichern",
	"Spielsteuerungen",
	"Spiel beenden",
	"Spiel wieder aufnehmen",
	"Spielsteuerungen",
	"Welches Spiel soll noch einmal geladen werden?",
	"W""\x84""hlen Sie den Platz zum Sichern aus.",
	"[ LEERER PLATZ ]",
	"Abbrechen",
	"Beschreibung des gesicherten Spiels eingeben.",
	"Sichern",
	"Ruhe in Frieden, Brandon.",
	"Soll das Spiel wirklich beendet werden?",
	"XXXXX",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"XXXXX",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXX",
	"",
	"",
	"",
	"",
	"",
	"Hauptmen\x81",
	"An",
	"Aus",
	"Ja",
	"Nein",
	"Schrittempo",
	"Textgeschwindigkeit",
	"Die Musik ist",
	"Die Soundeffekte sind",
	"Stimmen/Text"
};

static const StringListProvider k1GUIStringsMacCDGermanProvider = { ARRAYSIZE(k1GUIStringsMacCDGerman), k1GUIStringsMacCDGerman };

static const char *const k1NewGameStringMacCDGerman[1] = {
	"[ EIN NEUES SPIEL ANFANGEN ]"
};

static const StringListProvider k1NewGameStringMacCDGermanProvider = { ARRAYSIZE(k1NewGameStringMacCDGerman), k1NewGameStringMacCDGerman };

static const char *const k1ConfigStringsMacCDGerman[12] = {
	"am langsamsten",
	"langsam",
	"normal",
	"schnell",
	"am schnellsten",
	"Nur Text",
	"Nur Stimmen",
	"Stimmen & Text",
	"am langsamsten",
	"normal",
	"schnell",
	"anklickbar"
};

static const StringListProvider k1ConfigStringsMacCDGermanProvider = { ARRAYSIZE(k1ConfigStringsMacCDGerman), k1ConfigStringsMacCDGerman };

static const char *const k1ConfigStrings2MacCDGerman[3] = {
	"Keine Musik",
	"Hohe Qualit""\x64""t",
	"Leise"
};

static const StringListProvider k1ConfigStrings2MacCDGermanProvider = { ARRAYSIZE(k1ConfigStrings2MacCDGerman), k1ConfigStrings2MacCDGerman };

static const uint8 k1CreditsStringsMacCDGerman[] = {
	0x0a, 0x02, 0x45, 0x4e, 0x44, 0x45, 0x0a, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x44, 0x49, 0x45,
	0x20, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x45,
	0x20, 0x56, 0x4f, 0x4e, 0x20, 0x4b, 0x59, 0x52,
	0x41, 0x4e, 0x44, 0x49, 0x41, 0x20, 0x43, 0x44,
	0x2d, 0x52, 0x4f, 0x4d, 0x0a, 0x0a, 0x0a, 0x4e,
	0x61, 0x63, 0x68, 0x20, 0x64, 0x65, 0x6d, 0x20,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x2d, 0x49, 0x42, 0x4d, 0x2d, 0x53, 0x70, 0x69,
	0x65, 0x6c, 0x20, 0x76, 0x6f, 0x6e, 0x0a, 0x42,
	0x72, 0x65, 0x74, 0x74, 0x20, 0x57, 0x2e, 0x20,
	0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x20, 0x26,
	0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c,
	0x20, 0x4c, 0x65, 0x67, 0x67, 0x0a, 0x0a, 0x0a,
	0x0a, 0x0a, 0x4d, 0x49, 0x54, 0x57, 0x49, 0x52,
	0x4b, 0x45, 0x4e, 0x44, 0x45, 0x3a, 0x0a, 0x0a,
	0x03, 0x42, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4e,
	0x3a, 0x05, 0x04, 0x4a, 0x6f, 0x65, 0x20, 0x4b,
	0x75, 0x63, 0x61, 0x6e, 0x0a, 0x03, 0x4d, 0x41,
	0x4c, 0x43, 0x4f, 0x4c, 0x4d, 0x3a, 0x05, 0x04,
	0x47, 0x61, 0x72, 0x79, 0x20, 0x48, 0x79, 0x61,
	0x74, 0x74, 0x0a, 0x03, 0x4b, 0x41, 0x4c, 0x4c,
	0x41, 0x4b, 0x3a, 0x05, 0x04, 0x48, 0x61, 0x72,
	0x6c, 0x65, 0x79, 0x20, 0x41, 0x6b, 0x65, 0x72,
	0x73, 0x0a, 0x03, 0x42, 0x52, 0x59, 0x4e, 0x4e,
	0x3a, 0x05, 0x04, 0x42, 0x72, 0x65, 0x74, 0x74,
	0x20, 0x53, 0x65, 0x61, 0x72, 0x73, 0x0a, 0x03,
	0x54, 0x52, 0x45, 0x45, 0x46, 0x41, 0x43, 0x45,
	0x3a, 0x05, 0x04, 0x44, 0x61, 0x76, 0x69, 0x64,
	0x20, 0x45, 0x2e, 0x20, 0x43, 0x6f, 0x75, 0x73,
	0x69, 0x6e, 0x73, 0x0a, 0x03, 0x44, 0x41, 0x52,
	0x4d, 0x3a, 0x05, 0x04, 0x52, 0x69, 0x63, 0x68,
	0x61, 0x72, 0x64, 0x20, 0x53, 0x6d, 0x69, 0x74,
	0x68, 0x0a, 0x03, 0x4d, 0x45, 0x52, 0x49, 0x54,
	0x48, 0x3a, 0x05, 0x04, 0x4d, 0x69, 0x63, 0x68,
	0x61, 0x65, 0x6c, 0x20, 0x57, 0x65, 0x62, 0x73,
	0x74, 0x65, 0x72, 0x0a, 0x03, 0x4e, 0x4f, 0x4c,
	0x42, 0x59, 0x3a, 0x05, 0x04, 0x50, 0x61, 0x74,
	0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x73,
	0x0a, 0x03, 0x42, 0x52, 0x41, 0x4e, 0x44, 0x59,
	0x57, 0x49, 0x4e, 0x45, 0x3a, 0x05, 0x04, 0x47,
	0x6c, 0x6f, 0x72, 0x69, 0x61, 0x20, 0x48, 0x6f,
	0x66, 0x66, 0x6d, 0x61, 0x6e, 0x0a, 0x03, 0x46,
	0x41, 0x55, 0x4e, 0x3a, 0x05, 0x04, 0x45, 0x6c,
	0x65, 0x6e, 0x61, 0x20, 0x46, 0x65, 0x72, 0x72,
	0x61, 0x6e, 0x74, 0x69, 0x0a, 0x03, 0x50, 0x53,
	0x45, 0x55, 0x44, 0x4f, 0x42, 0x55, 0x53, 0x48,
	0x49, 0x41, 0x3a, 0x05, 0x04, 0x47, 0x61, 0x72,
	0x79, 0x20, 0x48, 0x79, 0x61, 0x74, 0x74, 0x0a,
	0x03, 0x4b, 0x41, 0x54, 0x48, 0x45, 0x52, 0x49,
	0x4e, 0x45, 0x3a, 0x05, 0x04, 0x4a, 0x75, 0x6c,
	0x69, 0x65, 0x20, 0x53, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x0a, 0x03, 0x5a, 0x41, 0x4e, 0x54,
	0x48, 0x49, 0x41, 0x3a, 0x05, 0x04, 0x47, 0x69,
	0x6e, 0x61, 0x6c, 0x79, 0x6e, 0x20, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x69, 0x6c, 0x6c, 0x61,
	0x0a, 0x03, 0x48, 0x45, 0x52, 0x4d, 0x41, 0x4e,
	0x3a, 0x05, 0x04, 0x47, 0x61, 0x72, 0x79, 0x20,
	0x48, 0x79, 0x61, 0x74, 0x74, 0x0a, 0x03, 0x49,
	0x52, 0x52, 0x4c, 0x49, 0x43, 0x48, 0x54, 0x45,
	0x52, 0x3a, 0x05, 0x04, 0x47, 0x72, 0x65, 0x67,
	0x20, 0x48, 0x6f, 0x64, 0x67, 0x65, 0x73, 0x0a,
	0x04, 0x4b, 0x61, 0x72, 0x65, 0x6e, 0x20, 0x4c,
	0x79, 0x6e, 0x6e, 0x20, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x0a, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x4b, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x4c,
	0x45, 0x49, 0x54, 0x55, 0x4e, 0x47, 0x0a, 0x42,
	0x72, 0x65, 0x74, 0x74, 0x20, 0x57, 0x2e, 0x20,
	0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0a, 0x0a,
	0x0a, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x4b, 0x54,
	0x49, 0x4f, 0x4e, 0x20, 0x26, 0x20, 0x54, 0x4f,
	0x4e, 0x52, 0x45, 0x47, 0x49, 0x45, 0x0a, 0x4a,
	0x65, 0x6e, 0x6e, 0x69, 0x66, 0x65, 0x72, 0x20,
	0x53, 0x77, 0x61, 0x72, 0x64, 0x0a, 0x0a, 0x0a,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x4d,
	0x49, 0x45, 0x52, 0x55, 0x4e, 0x47, 0x53, 0x4c,
	0x45, 0x49, 0x54, 0x55, 0x4e, 0x47, 0x0a, 0x53,
	0x63, 0x6f, 0x74, 0x74, 0x20, 0x4b, 0x2e, 0x20,
	0x42, 0x6f, 0x77, 0x65, 0x6e, 0x0a, 0x0a, 0x0a,
	0x5a, 0x55, 0x53, 0x8e, 0x54, 0x5a, 0x4c, 0x49,
	0x43, 0x48, 0x45, 0x20, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x41, 0x4d, 0x4d, 0x49, 0x45, 0x52, 0x55,
	0x4e, 0x47, 0x0a, 0x51, 0x69, 0x6e, 0x67, 0x20,
	0x59, 0x75, 0x61, 0x6e, 0x0a, 0x0a, 0x0a, 0x41,
	0x55, 0x46, 0x47, 0x45, 0x4e, 0x4f, 0x4d, 0x4d,
	0x45, 0x4e, 0x20, 0x56, 0x4f, 0x4e, 0x0a, 0x54,
	0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x61, 0x72, 0x61,
	0x0a, 0x62, 0x65, 0x69, 0x20, 0x4d, 0x69, 0x64,
	0x69, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2c, 0x20,
	0x4c, 0x61, 0x73, 0x20, 0x56, 0x65, 0x67, 0x61,
	0x73, 0x2c, 0x20, 0x4e, 0x56, 0x0a, 0x0a, 0x0a,
	0x54, 0x4f, 0x4e, 0x42, 0x45, 0x41, 0x52, 0x42,
	0x45, 0x49, 0x54, 0x55, 0x4e, 0x47, 0x20, 0x26,
	0x0a, 0x53, 0x50, 0x45, 0x5a, 0x49, 0x41, 0x4c,
	0x45, 0x46, 0x46, 0x45, 0x4b, 0x54, 0x45, 0x0a,
	0x50, 0x61, 0x75, 0x6c, 0x20, 0x53, 0x2e, 0x20,
	0x4d, 0x75, 0x64, 0x72, 0x61, 0x0a, 0x44, 0x77,
	0x69, 0x67, 0x68, 0x74, 0x20, 0x4f, 0x6b, 0x61,
	0x68, 0x61, 0x72, 0x61, 0x0a, 0x54, 0x6f, 0x74,
	0x6f, 0x20, 0x5a, 0x61, 0x72, 0x61, 0x0a, 0x50,
	0x61, 0x74, 0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x73, 0x0a, 0x0a, 0x0a, 0x47, 0x45, 0x53,
	0x41, 0x4d, 0x54, 0x4c, 0x45, 0x49, 0x54, 0x55,
	0x4e, 0x47, 0x0a, 0x4c, 0x79, 0x6c, 0x65, 0x20,
	0x4a, 0x2e, 0x20, 0x48, 0x61, 0x6c, 0x6c, 0x0a,
	0x53, 0x63, 0x6f, 0x74, 0x74, 0x20, 0x44, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x74, 0x0a, 0x0a, 0x0a,
	0x48, 0x41, 0x4e, 0x44, 0x42, 0x55, 0x43, 0x48,
	0x2d, 0x44, 0x45, 0x53, 0x49, 0x47, 0x4e, 0x20,
	0x26, 0x20, 0x2d, 0x4c, 0x41, 0x59, 0x4f, 0x55,
	0x54, 0x0a, 0x4c, 0x69, 0x73, 0x61, 0x20, 0x41,
	0x2e, 0x20, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e,
	0x0a, 0x4c, 0x69, 0x73, 0x61, 0x20, 0x4d, 0x61,
	0x72, 0x63, 0x69, 0x6e, 0x6b, 0x6f, 0x0a, 0x0a,
	0x0a, 0x43, 0x44, 0x2d, 0x52, 0x4f, 0x4d, 0x2d,
	0x44, 0x45, 0x53, 0x49, 0x47, 0x4e, 0x20, 0x26,
	0x20, 0x2d, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54,
	0x0a, 0x4c, 0x69, 0x73, 0x61, 0x20, 0x41, 0x2e,
	0x20, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x0a,
	0x4c, 0x61, 0x75, 0x72, 0x65, 0x6e, 0x20, 0x52,
	0x69, 0x66, 0x6b, 0x69, 0x6e, 0x0a, 0x0a, 0x0a,
	0x54, 0x45, 0x43, 0x48, 0x4e, 0x49, 0x53, 0x43,
	0x48, 0x45, 0x20, 0x4c, 0x45, 0x49, 0x54, 0x55,
	0x4e, 0x47, 0x0a, 0x43, 0x68, 0x72, 0x69, 0x73,
	0x74, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x20, 0x44,
	0x2e, 0x20, 0x59, 0x61, 0x74, 0x65, 0x73, 0x0a,
	0x0a, 0x0a, 0x4b, 0x4f, 0x4f, 0x52, 0x44, 0x49,
	0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x0a, 0x49,
	0x7a, 0x7a, 0x79, 0x20, 0x4a, 0x7a, 0x61, 0x67,
	0x75, 0x69, 0x72, 0x72, 0x65, 0x0a, 0x0a, 0x0a,
	0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x8e, 0x54,
	0x53, 0x53, 0x49, 0x43, 0x48, 0x45, 0x52, 0x55,
	0x4e, 0x47, 0x0a, 0x47, 0x6c, 0x65, 0x6e, 0x6e,
	0x20, 0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0a,
	0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x6e, 0x65, 0x72, 0x0a, 0x57, 0x69,
	0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x20, 0x46, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x0a, 0x4a, 0x65, 0x73,
	0x73, 0x65, 0x20, 0x43, 0x6c, 0x65, 0x6d, 0x69,
	0x74, 0x0a, 0x4a, 0x65, 0x66, 0x66, 0x20, 0x46,
	0x69, 0x6c, 0x6c, 0x68, 0x61, 0x62, 0x65, 0x72,
	0x0a, 0x0a, 0x0a, 0x42, 0x45, 0x53, 0x4f, 0x4e,
	0x44, 0x45, 0x52, 0x45, 0x4e, 0x20, 0x44, 0x41,
	0x4e, 0x4b, 0x20, 0x41, 0x4e, 0x0a, 0x4b, 0x65,
	0x76, 0x69, 0x6e, 0x20, 0x4e, 0x6f, 0x72, 0x72,
	0x2c, 0x20, 0x4a, 0x65, 0x66, 0x66, 0x20, 0x57,
	0x61, 0x67, 0x6f, 0x6e, 0x65, 0x72, 0x0a, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x02, 0x46,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x26, 0x20,
	0x46, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x0a, 0x02,
	0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x49, 0x0a, 0x02,
	0x54, 0x48, 0x45, 0x20, 0x4c, 0x45, 0x47, 0x45,
	0x4e, 0x44, 0x20, 0x4f, 0x46, 0x20, 0x4b, 0x59,
	0x52, 0x41, 0x4e, 0x44, 0x49, 0x41, 0x0a, 0x0a,
	0x56, 0x65, 0x72, 0x94, 0x66, 0x66, 0x65, 0x6e,
	0x74, 0x6c, 0x69, 0x63, 0x68, 0x74, 0x20, 0x76,
	0x6f, 0x6e, 0x0a, 0x02, 0x57, 0x65, 0x73, 0x74,
	0x77, 0x6f, 0x6f, 0x64, 0x20, 0x53, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x73, 0x0a, 0x0a, 0x0a, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a,
	0x0a, 0x0a, 0x03, 0x52, 0x65, 0x67, 0x69, 0x65,
	0x3a, 0x05, 0x04, 0x42, 0x72, 0x65, 0x74, 0x74,
	0x20, 0x57, 0x2e, 0x20, 0x53, 0x70, 0x65, 0x72,
	0x72, 0x79, 0x0a, 0x0a, 0x03, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x3a, 0x05, 0x04, 0x4d, 0x69,
	0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65,
	0x67, 0x67, 0x0a, 0x04, 0x52, 0x69, 0x63, 0x6b,
	0x20, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x0a, 0x04,
	0x50, 0x61, 0x75, 0x6c, 0x20, 0x53, 0x2e, 0x20,
	0x4d, 0x75, 0x64, 0x72, 0x61, 0x0a, 0x0a, 0x02,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d,
	0x69, 0x65, 0x72, 0x75, 0x6e, 0x67, 0x73, 0x6c,
	0x65, 0x69, 0x74, 0x75, 0x6e, 0x67, 0x3a, 0x0a,
	0x05, 0x04, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65,
	0x6c, 0x20, 0x4c, 0x65, 0x67, 0x67, 0x0a, 0x0a,
	0x03, 0x54, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6d, 0x69, 0x65, 0x72,
	0x65, 0x72, 0x3a, 0x05, 0x04, 0x53, 0x63, 0x6f,
	0x74, 0x74, 0x20, 0x4b, 0x2e, 0x20, 0x42, 0x6f,
	0x77, 0x65, 0x6e, 0x0a, 0x0a, 0x03, 0x41, 0x6d,
	0x69, 0x67, 0x61, 0x2d, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x6d, 0x69, 0x65, 0x72, 0x65,
	0x72, 0x3a, 0x05, 0x04, 0x42, 0x69, 0x6c, 0x6c,
	0x20, 0x53, 0x74, 0x6f, 0x6b, 0x65, 0x73, 0x0a,
	0x0a, 0x03, 0x56, 0x6f, 0x72, 0x2d, 0x20, 0x75,
	0x6e, 0x64, 0x20, 0x4e, 0x61, 0x63, 0x68, 0x73,
	0x70, 0x61, 0x6e, 0x6e, 0x3a, 0x05, 0x04, 0x43,
	0x68, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x70, 0x68,
	0x65, 0x72, 0x20, 0x59, 0x61, 0x74, 0x65, 0x73,
	0x0a, 0x0a, 0x02, 0x4b, 0x81, 0x6e, 0x73, 0x74,
	0x6c, 0x65, 0x72, 0x69, 0x73, 0x63, 0x68, 0x65,
	0x20, 0x47, 0x65, 0x73, 0x74, 0x61, 0x6c, 0x74,
	0x75, 0x6e, 0x67, 0x3a, 0x0a, 0x05, 0x04, 0x52,
	0x69, 0x63, 0x6b, 0x20, 0x50, 0x61, 0x72, 0x6b,
	0x73, 0x0a, 0x04, 0x52, 0x65, 0x6e, 0x20, 0x4f,
	0x6c, 0x73, 0x65, 0x6e, 0x0a, 0x04, 0x4c, 0x6f,
	0x75, 0x69, 0x73, 0x65, 0x20, 0x53, 0x61, 0x6e,
	0x64, 0x6f, 0x76, 0x61, 0x6c, 0x0a, 0x04, 0x4a,
	0x6f, 0x73, 0x65, 0x70, 0x68, 0x20, 0x48, 0x65,
	0x77, 0x69, 0x74, 0x74, 0x20, 0x49, 0x56, 0x0a,
	0x04, 0x4a, 0x75, 0x64, 0x69, 0x74, 0x68, 0x20,
	0x50, 0x65, 0x74, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x0a, 0x04, 0x41, 0x61, 0x72, 0x6f, 0x6e, 0x20,
	0x50, 0x6f, 0x77, 0x65, 0x6c, 0x6c, 0x0a, 0x04,
	0x45, 0x6c, 0x69, 0x65, 0x20, 0x41, 0x72, 0x61,
	0x62, 0x69, 0x61, 0x6e, 0x0a, 0x04, 0x45, 0x72,
	0x69, 0x63, 0x20, 0x53, 0x68, 0x75, 0x6c, 0x74,
	0x73, 0x0a, 0x0a, 0x03, 0x54, 0x6f, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x65, 0x3a, 0x05, 0x04, 0x50,
	0x61, 0x75, 0x6c, 0x20, 0x53, 0x2e, 0x20, 0x4d,
	0x75, 0x64, 0x72, 0x61, 0x0a, 0x0a, 0x03, 0x4d,
	0x75, 0x73, 0x69, 0x6b, 0x3a, 0x05, 0x04, 0x46,
	0x72, 0x61, 0x6e, 0x6b, 0x20, 0x4b, 0x6c, 0x65,
	0x70, 0x61, 0x63, 0x6b, 0x69, 0x0a, 0x0a, 0x03,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x66,
	0x65, 0x6b, 0x74, 0x65, 0x3a, 0x05, 0x04, 0x44,
	0x77, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4f, 0x6b,
	0x61, 0x68, 0x61, 0x72, 0x61, 0x0a, 0x0a, 0x03,
	0x41, 0x75, 0x74, 0x6f, 0x72, 0x3a, 0x05, 0x04,
	0x22, 0x43, 0x6f, 0x63, 0x6f, 0x22, 0x0a, 0x0a,
	0x03, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x84,
	0x74, 0x73, 0x73, 0x69, 0x63, 0x68, 0x65, 0x72,
	0x75, 0x6e, 0x67, 0x3a, 0x05, 0x04, 0x47, 0x6c,
	0x65, 0x6e, 0x6e, 0x20, 0x53, 0x70, 0x65, 0x72,
	0x72, 0x79, 0x0a, 0x04, 0x4d, 0x61, 0x74, 0x74,
	0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x73,
	0x0a, 0x04, 0x42, 0x69, 0x6c, 0x6c, 0x20, 0x46,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x0a, 0x04, 0x4d,
	0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x72, 0x0a,
	0x04, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c,
	0x20, 0x47, 0x61, 0x74, 0x65, 0x72, 0x0a, 0x04,
	0x45, 0x75, 0x67, 0x65, 0x6e, 0x65, 0x20, 0x4d,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x0a, 0x04, 0x4d,
	0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x47,
	0x6c, 0x6f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x0a,
	0x04, 0x4a, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x20,
	0x4e, 0x6f, 0x72, 0x72, 0x0a, 0x04, 0x54, 0x6f,
	0x70, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x54,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x04,
	0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20,
	0x31, 0x2c, 0x20, 0x32, 0x2c, 0x20, 0x33, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x4d, 0x41, 0x43, 0x2d,
	0x4b, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x49,
	0x45, 0x52, 0x55, 0x4e, 0x47, 0x20, 0x56, 0x4f,
	0x4e, 0x0a, 0x54, 0x68, 0x65, 0x20, 0x44, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x73, 0x20, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x2c, 0x20, 0x49, 0x6e,
	0x63, 0x2e, 0x0a, 0x0a, 0x03, 0x50, 0x52, 0x4f,
	0x47, 0x52, 0x41, 0x4d, 0x4d, 0x49, 0x45, 0x52,
	0x45, 0x52, 0x3a, 0x05, 0x04, 0x4a, 0x6f, 0x65,
	0x20, 0x50, 0x65, 0x61, 0x72, 0x63, 0x65, 0x0a,
	0x04, 0x4a, 0x6f, 0x65, 0x20, 0x42, 0x75, 0x72,
	0x6b, 0x73, 0x0a, 0x0a, 0x03, 0x51, 0x55, 0x41,
	0x4c, 0x49, 0x54, 0x8e, 0x54, 0x53, 0x53, 0x49,
	0x43, 0x48, 0x45, 0x52, 0x55, 0x4e, 0x47, 0x3a,
	0x05, 0x04, 0x53, 0x74, 0x65, 0x76, 0x65, 0x6e,
	0x20, 0x4d, 0x63, 0x4e, 0x61, 0x6c, 0x6c, 0x79,
	0x0a, 0x04, 0x4a, 0x65, 0x6e, 0x6e, 0x69, 0x66,
	0x65, 0x72, 0x20, 0x47, 0x72, 0x6f, 0x67, 0x61,
	0x6e, 0x0a, 0x04, 0x4c, 0x65, 0x6e, 0x20, 0x4d,
	0x69, 0x6e, 0x64, 0x65, 0x7a, 0x0a, 0x0a, 0x0a,
	0x0a, 0x0a, 0x42, 0x65, 0x73, 0x6f, 0x6e, 0x64,
	0x65, 0x72, 0x65, 0x72, 0x20, 0x44, 0x61, 0x6e,
	0x6b, 0x20, 0x67, 0x69, 0x6c, 0x74, 0x3a, 0x0a,
	0x4c, 0x79, 0x6c, 0x65, 0x20, 0x4a, 0x2e, 0x20,
	0x48, 0x61, 0x6c, 0x6c, 0x0a, 0x44, 0x61, 0x76,
	0x69, 0x64, 0x20, 0x42, 0x69, 0x73, 0x68, 0x6f,
	0x70, 0x0a, 0x22, 0x54, 0x68, 0x65, 0x20, 0x44,
	0x6f, 0x63, 0x22, 0x0a, 0x75, 0x6e, 0x64, 0x0a,
	0x53, 0x50, 0x52, 0x4f, 0x43, 0x4b, 0x45, 0x54,
	0x53, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x01, 0x41, 0x6c, 0x6c,
	0x65, 0x20, 0x8e, 0x68, 0x6e, 0x6c, 0x69, 0x63,
	0x68, 0x6b, 0x65, 0x69, 0x74, 0x65, 0x6e, 0x20,
	0x76, 0x6f, 0x6e, 0x20, 0x69, 0x6d, 0x20, 0x53,
	0x70, 0x69, 0x65, 0x6c, 0x0a, 0x01, 0x61, 0x75,
	0x66, 0x74, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x20, 0x46, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x6e, 0x20, 0x6d, 0x69, 0x74, 0x20, 0x6c,
	0x65, 0x62, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x20,
	0x6f, 0x64, 0x65, 0x72, 0x0a, 0x01, 0x76, 0x65,
	0x72, 0x73, 0x74, 0x6f, 0x72, 0x62, 0x65, 0x6e,
	0x65, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x65, 0x6e, 0x20, 0x73, 0x69, 0x6e, 0x64,
	0x20, 0x72, 0x65, 0x69, 0x6e, 0x20, 0x7a, 0x75,
	0x66, 0x8e, 0x6c, 0x6c, 0x69, 0x67, 0x2e, 0x0a,
	0x0a, 0x0a, 0x01, 0x43, 0x6f, 0x70, 0x79, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x20, 0x28, 0x63, 0x29,
	0x20, 0x31, 0x39, 0x39, 0x33, 0x2c, 0x20, 0x57,
	0x65, 0x73, 0x74, 0x77, 0x6f, 0x6f, 0x64, 0x20,
	0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x2c,
	0x20, 0x49, 0x6e, 0x63, 0x2e, 0x0a, 0x01, 0x41,
	0x6c, 0x6c, 0x65, 0x20, 0x52, 0x65, 0x63, 0x68,
	0x74, 0x65, 0x20, 0x56, 0x6f, 0x72, 0x62, 0x65,
	0x68, 0x61, 0x6c, 0x74, 0x65, 0x6e, 0x2e, 0x0a,
	0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x00
};

static const ByteProvider k1CreditsStringsMacCDGermanProvider = { ARRAYSIZE(k1CreditsStringsMacCDGerman), k1CreditsStringsMacCDGerman };
