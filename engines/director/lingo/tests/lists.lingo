set x = []
set y = [:]
set machinery = [#gears:6, #balls:3, #ramps:8]
set nested = [1, 2, [3, 4], 5]
set gList = ["car":1, "boat": 20]

set a to [1, 2, 3]
put a

set gList = [point(70, 190), point(217, 66), point(364, 185)]

set gBugList = [[energy: 10, mood: "Happy"], [energy: -10, mood: "Sad"], [energy: 60, mood: "Hungry"], [energy: 20, mood: "Sad"]]

set b to [4, 5, 6, 7]
set res to a + b
set res to a - b
set res to a * b
set res to b / a
set res to b mod a
set res to -a

set floats to [4.0, 5.0, 6.0, 7.0]
set strings to ["4", "5", "6", "7"]

set res to a + floats
set res to a + strings
set res to a + 1
set res to 1 + b

set res to a = a
set res to a = b
set res to a < b

set a to [0, 0]
set b to [0]
set res to a = b
set res to a >= b
set res to b = a
set res to b >= a
set b to [1]
set res to a = b
set res to a <> b

set a to [#a:6, #b:3, #c:8, #d:5]
set res to a = machinery
set res to a >= machinery
set res to machinery = a
set res to machinery >= a

-- itemOf
set string_array to "one,, three, four"
set res to item 2 of string_array
scummvmAssert(res="")
set res to item 3 of string_array
scummvmAssert(res=" three")
set res to item 4 of string_array
scummvmAssert(res=" four")

-- itemOf check for float
set res to item 3.4 of string_array
scummvmAssert(res=" three")

-- itemOf out of bounds checks
set res to item 5 of string_array
scummvmAssert(res="")

set res to item -1 of string_array
scummvmAssert(res=string_array)

-- itemOf: test delimiter
set save = the itemDelimiter
set the itemDelimiter = ":"
set delim_array to "one: two: three: four"
set res to item 3 of delim_array
scummvmAssert(res=" three")
set the itemDelimiter = save

-- setAt
set lst to []
setAt lst,1,5
scummvmAssert(lst = [5])
set lst to []
setAt lst,3,5
scummvmAssert(lst = [0,0,5])
setAt lst,2,5
scummvmAssert(lst = [0,5,5])
